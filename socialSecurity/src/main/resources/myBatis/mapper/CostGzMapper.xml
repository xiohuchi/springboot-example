<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dianmi.mapper.CostGzMapper">
	<resultMap id="BaseResultMap" type="com.dianmi.model.CostGz">
		<constructor>
			<idArg column="cg_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
			<arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
			<arg column="customer_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
			<arg column="supplier_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
			<arg column="customer_name" javaType="java.lang.String" jdbcType="VARCHAR" />
			<arg column="reporting_period" javaType="java.lang.String"
				jdbcType="VARCHAR" />
			<arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
			<arg column="certificate_number" javaType="java.lang.String"
				jdbcType="VARCHAR" />
			<arg column="certificate_name" javaType="java.lang.String"
				jdbcType="VARCHAR" />
			<arg column="social_security_number" javaType="java.lang.String"
				jdbcType="VARCHAR" />
			<arg column="payment_month" javaType="java.lang.String" jdbcType="VARCHAR" />
			<arg column="pension_radix" javaType="java.lang.Double" jdbcType="DOUBLE" />
			<arg column="pension_company_pay" javaType="java.lang.Double"
				jdbcType="DOUBLE" />
			<arg column="pension_person_pay" javaType="java.lang.Double"
				jdbcType="DOUBLE" />
			<arg column="unemployment_radix" javaType="java.lang.Double"
				jdbcType="DOUBLE" />
			<arg column="unemployment_company_pay" javaType="java.lang.Double"
				jdbcType="DOUBLE" />
			<arg column="unemployment_person_pay" javaType="java.lang.Double"
				jdbcType="DOUBLE" />
			<arg column="injury_company_radix" javaType="java.lang.Double"
				jdbcType="DOUBLE" />
			<arg column="injury_company_pay" javaType="java.lang.Double"
				jdbcType="DOUBLE" />
			<arg column="injury_person_pay" javaType="java.lang.Double"
				jdbcType="DOUBLE" />
			<arg column="procreate_company_radix" javaType="java.lang.Double"
				jdbcType="DOUBLE" />
			<arg column="procreate_company_pay" javaType="java.lang.Double"
				jdbcType="DOUBLE" />
			<arg column="procreate_person_pay" javaType="java.lang.Double"
				jdbcType="DOUBLE" />
			<arg column="medical_treatment_radix" javaType="java.lang.Double"
				jdbcType="DOUBLE" />
			<arg column="medical_treatment_company_pay" javaType="java.lang.Double"
				jdbcType="DOUBLE" />
			<arg column="medical_treatment_person_pay" javaType="java.lang.Double"
				jdbcType="DOUBLE" />
			<arg column="serious_illness_radix" javaType="java.lang.Double"
				jdbcType="DOUBLE" />
			<arg column="serious_illness_company_pay" javaType="java.lang.Double"
				jdbcType="DOUBLE" />
			<arg column="serious_illness_person_pay" javaType="java.lang.Double"
				jdbcType="DOUBLE" />
			<arg column="service_charge" javaType="java.lang.Double"
				jdbcType="DOUBLE" />
			<arg column="company_total" javaType="java.lang.Double" jdbcType="DOUBLE" />
			<arg column="person_total" javaType="java.lang.Double" jdbcType="DOUBLE" />
			<arg column="social_security_total" javaType="java.lang.Double"
				jdbcType="DOUBLE" />
			<arg column="accumulation_fund_radix" javaType="java.lang.Double"
				jdbcType="DOUBLE" />
			<arg column="accumulation_fund_company_ratio" javaType="java.lang.String"
				jdbcType="VARCHAR" />
			<arg column="accumulation_fund_company_pay" javaType="java.lang.Double"
				jdbcType="DOUBLE" />
			<arg column="accumulation_fund_person_ratio" javaType="java.lang.String"
				jdbcType="VARCHAR" />
			<arg column="accumulation_fund_person_pay" javaType="java.lang.Double"
				jdbcType="DOUBLE" />
			<arg column="accumulation_fund_total" javaType="java.lang.Double"
				jdbcType="DOUBLE" />
			<arg column="system_person_number" javaType="java.lang.String"
				jdbcType="VARCHAR" />
			<arg column="company" javaType="java.lang.String" jdbcType="VARCHAR" />
			<arg column="manager" javaType="java.lang.String" jdbcType="VARCHAR" />
		</constructor>
	</resultMap>
	<sql id="Base_Column_List">
		cg_id, user_id, customer_id, supplier_id, customer_name,
		reporting_period,
		name,
		certificate_number, certificate_name,
		social_security_number, payment_month,
		pension_radix,
		pension_company_pay, pension_person_pay, unemployment_radix,
		unemployment_company_pay,
		unemployment_person_pay,
		injury_company_radix, injury_company_pay,
		injury_person_pay,
		procreate_company_radix, procreate_company_pay, procreate_person_pay,
		medical_treatment_radix,
		medical_treatment_company_pay,
		medical_treatment_person_pay,
		serious_illness_radix,
		serious_illness_company_pay, serious_illness_person_pay,
		service_charge, company_total,
		person_total, social_security_total,
		accumulation_fund_radix,
		accumulation_fund_company_ratio,
		accumulation_fund_company_pay, accumulation_fund_person_ratio,
		accumulation_fund_person_pay,
		accumulation_fund_total,
		system_person_number, company, manager
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from cost_gz
		where cg_id = #{cgId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		cost_gz
		where cg_id = #{cgId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.dianmi.model.CostGz">
		insert into cost_gz (cg_id,
		user_id, customer_id,
		supplier_id, customer_name, reporting_period,
		name, certificate_number, certificate_name,
		social_security_number,
		payment_month, pension_radix,
		pension_company_pay, pension_person_pay,
		unemployment_radix,
		unemployment_company_pay, unemployment_person_pay,
		injury_company_radix, injury_company_pay, injury_person_pay,
		procreate_company_radix, procreate_company_pay,
		procreate_person_pay,
		medical_treatment_radix,
		medical_treatment_company_pay,
		medical_treatment_person_pay,
		serious_illness_radix,
		serious_illness_company_pay,
		serious_illness_person_pay,
		service_charge, company_total,
		person_total, social_security_total,
		accumulation_fund_radix,
		accumulation_fund_company_ratio,
		accumulation_fund_company_pay,
		accumulation_fund_person_ratio,
		accumulation_fund_person_pay,
		accumulation_fund_total,
		system_person_number,
		company, manager)
		values
		(#{cgId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER},
		#{customerId,jdbcType=INTEGER},
		#{supplierId,jdbcType=INTEGER},
		#{customerName,jdbcType=VARCHAR},
		#{reportingPeriod,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR}, #{certificateNumber,jdbcType=VARCHAR},
		#{certificateName,jdbcType=VARCHAR},
		#{socialSecurityNumber,jdbcType=VARCHAR},
		#{paymentMonth,jdbcType=VARCHAR}, #{pensionRadix,jdbcType=DOUBLE},
		#{pensionCompanyPay,jdbcType=DOUBLE},
		#{pensionPersonPay,jdbcType=DOUBLE},
		#{unemploymentRadix,jdbcType=DOUBLE},
		#{unemploymentCompanyPay,jdbcType=DOUBLE},
		#{unemploymentPersonPay,jdbcType=DOUBLE},
		#{injuryCompanyRadix,jdbcType=DOUBLE},
		#{injuryCompanyPay,jdbcType=DOUBLE},
		#{injuryPersonPay,jdbcType=DOUBLE},
		#{procreateCompanyRadix,jdbcType=DOUBLE},
		#{procreateCompanyPay,jdbcType=DOUBLE},
		#{procreatePersonPay,jdbcType=DOUBLE},
		#{medicalTreatmentRadix,jdbcType=DOUBLE},
		#{medicalTreatmentCompanyPay,jdbcType=DOUBLE},
		#{medicalTreatmentPersonPay,jdbcType=DOUBLE},
		#{seriousIllnessRadix,jdbcType=DOUBLE},
		#{seriousIllnessCompanyPay,jdbcType=DOUBLE},
		#{seriousIllnessPersonPay,jdbcType=DOUBLE},
		#{serviceCharge,jdbcType=DOUBLE}, #{companyTotal,jdbcType=DOUBLE},
		#{personTotal,jdbcType=DOUBLE},
		#{socialSecurityTotal,jdbcType=DOUBLE},
		#{accumulationFundRadix,jdbcType=DOUBLE},
		#{accumulationFundCompanyRatio,jdbcType=VARCHAR},
		#{accumulationFundCompanyPay,jdbcType=DOUBLE},
		#{accumulationFundPersonRatio,jdbcType=VARCHAR},
		#{accumulationFundPersonPay,jdbcType=DOUBLE},
		#{accumulationFundTotal,jdbcType=DOUBLE},
		#{systemPersonNumber,jdbcType=VARCHAR},
		#{company,jdbcType=VARCHAR},
		#{manager,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.dianmi.model.CostGz">
		insert into cost_gz
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="cgId != null">
				cg_id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="customerId != null">
				customer_id,
			</if>
			<if test="supplierId != null">
				supplier_id,
			</if>
			<if test="customerName != null">
				customer_name,
			</if>
			<if test="reportingPeriod != null">
				reporting_period,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="certificateNumber != null">
				certificate_number,
			</if>
			<if test="certificateName != null">
				certificate_name,
			</if>
			<if test="socialSecurityNumber != null">
				social_security_number,
			</if>
			<if test="paymentMonth != null">
				payment_month,
			</if>
			<if test="pensionRadix != null">
				pension_radix,
			</if>
			<if test="pensionCompanyPay != null">
				pension_company_pay,
			</if>
			<if test="pensionPersonPay != null">
				pension_person_pay,
			</if>
			<if test="unemploymentRadix != null">
				unemployment_radix,
			</if>
			<if test="unemploymentCompanyPay != null">
				unemployment_company_pay,
			</if>
			<if test="unemploymentPersonPay != null">
				unemployment_person_pay,
			</if>
			<if test="injuryCompanyRadix != null">
				injury_company_radix,
			</if>
			<if test="injuryCompanyPay != null">
				injury_company_pay,
			</if>
			<if test="injuryPersonPay != null">
				injury_person_pay,
			</if>
			<if test="procreateCompanyRadix != null">
				procreate_company_radix,
			</if>
			<if test="procreateCompanyPay != null">
				procreate_company_pay,
			</if>
			<if test="procreatePersonPay != null">
				procreate_person_pay,
			</if>
			<if test="medicalTreatmentRadix != null">
				medical_treatment_radix,
			</if>
			<if test="medicalTreatmentCompanyPay != null">
				medical_treatment_company_pay,
			</if>
			<if test="medicalTreatmentPersonPay != null">
				medical_treatment_person_pay,
			</if>
			<if test="seriousIllnessRadix != null">
				serious_illness_radix,
			</if>
			<if test="seriousIllnessCompanyPay != null">
				serious_illness_company_pay,
			</if>
			<if test="seriousIllnessPersonPay != null">
				serious_illness_person_pay,
			</if>
			<if test="serviceCharge != null">
				service_charge,
			</if>
			<if test="companyTotal != null">
				company_total,
			</if>
			<if test="personTotal != null">
				person_total,
			</if>
			<if test="socialSecurityTotal != null">
				social_security_total,
			</if>
			<if test="accumulationFundRadix != null">
				accumulation_fund_radix,
			</if>
			<if test="accumulationFundCompanyRatio != null">
				accumulation_fund_company_ratio,
			</if>
			<if test="accumulationFundCompanyPay != null">
				accumulation_fund_company_pay,
			</if>
			<if test="accumulationFundPersonRatio != null">
				accumulation_fund_person_ratio,
			</if>
			<if test="accumulationFundPersonPay != null">
				accumulation_fund_person_pay,
			</if>
			<if test="accumulationFundTotal != null">
				accumulation_fund_total,
			</if>
			<if test="systemPersonNumber != null">
				system_person_number,
			</if>
			<if test="company != null">
				company,
			</if>
			<if test="manager != null">
				manager,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="cgId != null">
				#{cgId,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="customerId != null">
				#{customerId,jdbcType=INTEGER},
			</if>
			<if test="supplierId != null">
				#{supplierId,jdbcType=INTEGER},
			</if>
			<if test="customerName != null">
				#{customerName,jdbcType=VARCHAR},
			</if>
			<if test="reportingPeriod != null">
				#{reportingPeriod,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="certificateNumber != null">
				#{certificateNumber,jdbcType=VARCHAR},
			</if>
			<if test="certificateName != null">
				#{certificateName,jdbcType=VARCHAR},
			</if>
			<if test="socialSecurityNumber != null">
				#{socialSecurityNumber,jdbcType=VARCHAR},
			</if>
			<if test="paymentMonth != null">
				#{paymentMonth,jdbcType=VARCHAR},
			</if>
			<if test="pensionRadix != null">
				#{pensionRadix,jdbcType=DOUBLE},
			</if>
			<if test="pensionCompanyPay != null">
				#{pensionCompanyPay,jdbcType=DOUBLE},
			</if>
			<if test="pensionPersonPay != null">
				#{pensionPersonPay,jdbcType=DOUBLE},
			</if>
			<if test="unemploymentRadix != null">
				#{unemploymentRadix,jdbcType=DOUBLE},
			</if>
			<if test="unemploymentCompanyPay != null">
				#{unemploymentCompanyPay,jdbcType=DOUBLE},
			</if>
			<if test="unemploymentPersonPay != null">
				#{unemploymentPersonPay,jdbcType=DOUBLE},
			</if>
			<if test="injuryCompanyRadix != null">
				#{injuryCompanyRadix,jdbcType=DOUBLE},
			</if>
			<if test="injuryCompanyPay != null">
				#{injuryCompanyPay,jdbcType=DOUBLE},
			</if>
			<if test="injuryPersonPay != null">
				#{injuryPersonPay,jdbcType=DOUBLE},
			</if>
			<if test="procreateCompanyRadix != null">
				#{procreateCompanyRadix,jdbcType=DOUBLE},
			</if>
			<if test="procreateCompanyPay != null">
				#{procreateCompanyPay,jdbcType=DOUBLE},
			</if>
			<if test="procreatePersonPay != null">
				#{procreatePersonPay,jdbcType=DOUBLE},
			</if>
			<if test="medicalTreatmentRadix != null">
				#{medicalTreatmentRadix,jdbcType=DOUBLE},
			</if>
			<if test="medicalTreatmentCompanyPay != null">
				#{medicalTreatmentCompanyPay,jdbcType=DOUBLE},
			</if>
			<if test="medicalTreatmentPersonPay != null">
				#{medicalTreatmentPersonPay,jdbcType=DOUBLE},
			</if>
			<if test="seriousIllnessRadix != null">
				#{seriousIllnessRadix,jdbcType=DOUBLE},
			</if>
			<if test="seriousIllnessCompanyPay != null">
				#{seriousIllnessCompanyPay,jdbcType=DOUBLE},
			</if>
			<if test="seriousIllnessPersonPay != null">
				#{seriousIllnessPersonPay,jdbcType=DOUBLE},
			</if>
			<if test="serviceCharge != null">
				#{serviceCharge,jdbcType=DOUBLE},
			</if>
			<if test="companyTotal != null">
				#{companyTotal,jdbcType=DOUBLE},
			</if>
			<if test="personTotal != null">
				#{personTotal,jdbcType=DOUBLE},
			</if>
			<if test="socialSecurityTotal != null">
				#{socialSecurityTotal,jdbcType=DOUBLE},
			</if>
			<if test="accumulationFundRadix != null">
				#{accumulationFundRadix,jdbcType=DOUBLE},
			</if>
			<if test="accumulationFundCompanyRatio != null">
				#{accumulationFundCompanyRatio,jdbcType=VARCHAR},
			</if>
			<if test="accumulationFundCompanyPay != null">
				#{accumulationFundCompanyPay,jdbcType=DOUBLE},
			</if>
			<if test="accumulationFundPersonRatio != null">
				#{accumulationFundPersonRatio,jdbcType=VARCHAR},
			</if>
			<if test="accumulationFundPersonPay != null">
				#{accumulationFundPersonPay,jdbcType=DOUBLE},
			</if>
			<if test="accumulationFundTotal != null">
				#{accumulationFundTotal,jdbcType=DOUBLE},
			</if>
			<if test="systemPersonNumber != null">
				#{systemPersonNumber,jdbcType=VARCHAR},
			</if>
			<if test="company != null">
				#{company,jdbcType=VARCHAR},
			</if>
			<if test="manager != null">
				#{manager,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.dianmi.model.CostGz">
		update cost_gz
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="customerId != null">
				customer_id = #{customerId,jdbcType=INTEGER},
			</if>
			<if test="supplierId != null">
				supplier_id = #{supplierId,jdbcType=INTEGER},
			</if>
			<if test="customerName != null">
				customer_name = #{customerName,jdbcType=VARCHAR},
			</if>
			<if test="reportingPeriod != null">
				reporting_period = #{reportingPeriod,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="certificateNumber != null">
				certificate_number =
				#{certificateNumber,jdbcType=VARCHAR},
			</if>
			<if test="certificateName != null">
				certificate_name = #{certificateName,jdbcType=VARCHAR},
			</if>
			<if test="socialSecurityNumber != null">
				social_security_number =
				#{socialSecurityNumber,jdbcType=VARCHAR},
			</if>
			<if test="paymentMonth != null">
				payment_month = #{paymentMonth,jdbcType=VARCHAR},
			</if>
			<if test="pensionRadix != null">
				pension_radix = #{pensionRadix,jdbcType=DOUBLE},
			</if>
			<if test="pensionCompanyPay != null">
				pension_company_pay =
				#{pensionCompanyPay,jdbcType=DOUBLE},
			</if>
			<if test="pensionPersonPay != null">
				pension_person_pay = #{pensionPersonPay,jdbcType=DOUBLE},
			</if>
			<if test="unemploymentRadix != null">
				unemployment_radix =
				#{unemploymentRadix,jdbcType=DOUBLE},
			</if>
			<if test="unemploymentCompanyPay != null">
				unemployment_company_pay =
				#{unemploymentCompanyPay,jdbcType=DOUBLE},
			</if>
			<if test="unemploymentPersonPay != null">
				unemployment_person_pay =
				#{unemploymentPersonPay,jdbcType=DOUBLE},
			</if>
			<if test="injuryCompanyRadix != null">
				injury_company_radix =
				#{injuryCompanyRadix,jdbcType=DOUBLE},
			</if>
			<if test="injuryCompanyPay != null">
				injury_company_pay = #{injuryCompanyPay,jdbcType=DOUBLE},
			</if>
			<if test="injuryPersonPay != null">
				injury_person_pay = #{injuryPersonPay,jdbcType=DOUBLE},
			</if>
			<if test="procreateCompanyRadix != null">
				procreate_company_radix =
				#{procreateCompanyRadix,jdbcType=DOUBLE},
			</if>
			<if test="procreateCompanyPay != null">
				procreate_company_pay =
				#{procreateCompanyPay,jdbcType=DOUBLE},
			</if>
			<if test="procreatePersonPay != null">
				procreate_person_pay =
				#{procreatePersonPay,jdbcType=DOUBLE},
			</if>
			<if test="medicalTreatmentRadix != null">
				medical_treatment_radix =
				#{medicalTreatmentRadix,jdbcType=DOUBLE},
			</if>
			<if test="medicalTreatmentCompanyPay != null">
				medical_treatment_company_pay =
				#{medicalTreatmentCompanyPay,jdbcType=DOUBLE},
			</if>
			<if test="medicalTreatmentPersonPay != null">
				medical_treatment_person_pay =
				#{medicalTreatmentPersonPay,jdbcType=DOUBLE},
			</if>
			<if test="seriousIllnessRadix != null">
				serious_illness_radix =
				#{seriousIllnessRadix,jdbcType=DOUBLE},
			</if>
			<if test="seriousIllnessCompanyPay != null">
				serious_illness_company_pay =
				#{seriousIllnessCompanyPay,jdbcType=DOUBLE},
			</if>
			<if test="seriousIllnessPersonPay != null">
				serious_illness_person_pay =
				#{seriousIllnessPersonPay,jdbcType=DOUBLE},
			</if>
			<if test="serviceCharge != null">
				service_charge = #{serviceCharge,jdbcType=DOUBLE},
			</if>
			<if test="companyTotal != null">
				company_total = #{companyTotal,jdbcType=DOUBLE},
			</if>
			<if test="personTotal != null">
				person_total = #{personTotal,jdbcType=DOUBLE},
			</if>
			<if test="socialSecurityTotal != null">
				social_security_total =
				#{socialSecurityTotal,jdbcType=DOUBLE},
			</if>
			<if test="accumulationFundRadix != null">
				accumulation_fund_radix =
				#{accumulationFundRadix,jdbcType=DOUBLE},
			</if>
			<if test="accumulationFundCompanyRatio != null">
				accumulation_fund_company_ratio =
				#{accumulationFundCompanyRatio,jdbcType=VARCHAR},
			</if>
			<if test="accumulationFundCompanyPay != null">
				accumulation_fund_company_pay =
				#{accumulationFundCompanyPay,jdbcType=DOUBLE},
			</if>
			<if test="accumulationFundPersonRatio != null">
				accumulation_fund_person_ratio =
				#{accumulationFundPersonRatio,jdbcType=VARCHAR},
			</if>
			<if test="accumulationFundPersonPay != null">
				accumulation_fund_person_pay =
				#{accumulationFundPersonPay,jdbcType=DOUBLE},
			</if>
			<if test="accumulationFundTotal != null">
				accumulation_fund_total =
				#{accumulationFundTotal,jdbcType=DOUBLE},
			</if>
			<if test="systemPersonNumber != null">
				system_person_number =
				#{systemPersonNumber,jdbcType=VARCHAR},
			</if>
			<if test="company != null">
				company = #{company,jdbcType=VARCHAR},
			</if>
			<if test="manager != null">
				manager = #{manager,jdbcType=VARCHAR},
			</if>
		</set>
		where cg_id = #{cgId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.dianmi.model.CostGz">
		update cost_gz
		set
		user_id = #{userId,jdbcType=INTEGER},
		customer_id =
		#{customerId,jdbcType=INTEGER},
		supplier_id =
		#{supplierId,jdbcType=INTEGER},
		customer_name =
		#{customerName,jdbcType=VARCHAR},
		reporting_period =
		#{reportingPeriod,jdbcType=VARCHAR},
		name = #{name,jdbcType=VARCHAR},
		certificate_number = #{certificateNumber,jdbcType=VARCHAR},
		certificate_name = #{certificateName,jdbcType=VARCHAR},
		social_security_number = #{socialSecurityNumber,jdbcType=VARCHAR},
		payment_month = #{paymentMonth,jdbcType=VARCHAR},
		pension_radix =
		#{pensionRadix,jdbcType=DOUBLE},
		pension_company_pay =
		#{pensionCompanyPay,jdbcType=DOUBLE},
		pension_person_pay =
		#{pensionPersonPay,jdbcType=DOUBLE},
		unemployment_radix =
		#{unemploymentRadix,jdbcType=DOUBLE},
		unemployment_company_pay =
		#{unemploymentCompanyPay,jdbcType=DOUBLE},
		unemployment_person_pay =
		#{unemploymentPersonPay,jdbcType=DOUBLE},
		injury_company_radix =
		#{injuryCompanyRadix,jdbcType=DOUBLE},
		injury_company_pay =
		#{injuryCompanyPay,jdbcType=DOUBLE},
		injury_person_pay =
		#{injuryPersonPay,jdbcType=DOUBLE},
		procreate_company_radix =
		#{procreateCompanyRadix,jdbcType=DOUBLE},
		procreate_company_pay =
		#{procreateCompanyPay,jdbcType=DOUBLE},
		procreate_person_pay =
		#{procreatePersonPay,jdbcType=DOUBLE},
		medical_treatment_radix =
		#{medicalTreatmentRadix,jdbcType=DOUBLE},
		medical_treatment_company_pay =
		#{medicalTreatmentCompanyPay,jdbcType=DOUBLE},
		medical_treatment_person_pay =
		#{medicalTreatmentPersonPay,jdbcType=DOUBLE},
		serious_illness_radix =
		#{seriousIllnessRadix,jdbcType=DOUBLE},
		serious_illness_company_pay =
		#{seriousIllnessCompanyPay,jdbcType=DOUBLE},
		serious_illness_person_pay =
		#{seriousIllnessPersonPay,jdbcType=DOUBLE},
		service_charge =
		#{serviceCharge,jdbcType=DOUBLE},
		company_total =
		#{companyTotal,jdbcType=DOUBLE},
		person_total =
		#{personTotal,jdbcType=DOUBLE},
		social_security_total =
		#{socialSecurityTotal,jdbcType=DOUBLE},
		accumulation_fund_radix =
		#{accumulationFundRadix,jdbcType=DOUBLE},
		accumulation_fund_company_ratio =
		#{accumulationFundCompanyRatio,jdbcType=VARCHAR},
		accumulation_fund_company_pay =
		#{accumulationFundCompanyPay,jdbcType=DOUBLE},
		accumulation_fund_person_ratio =
		#{accumulationFundPersonRatio,jdbcType=VARCHAR},
		accumulation_fund_person_pay =
		#{accumulationFundPersonPay,jdbcType=DOUBLE},
		accumulation_fund_total =
		#{accumulationFundTotal,jdbcType=DOUBLE},
		system_person_number =
		#{systemPersonNumber,jdbcType=VARCHAR},
		company =
		#{company,jdbcType=VARCHAR},
		manager = #{manager,jdbcType=VARCHAR}
		where cg_id = #{cgId,jdbcType=INTEGER}
	</update>

	<select id="selectGZhomeAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from
		cost_gz
		where
		supplier_id = #{supplierId}
		and
		reporting_period
		=#{reportingPeriod}
	</select>

	<select id="selectGZhomeAllBySupplierId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from cost_gz where supplier_id=#{supplierId}
		and reporting_period
		=#{reportingPeriod} order by cg_id
	</select>

	<select id="selectEmployeeName" resultType="java.lang.String">
		select name from
		cost_gz where supplier_id=#{supplierId}
		and reporting_period
		=#{reportingPeriod} and
		certificate_number=#{certificateNumber}
	</select>

	<!-- 修改公积金 -->
	<update id="updateAccumulationFund" parameterType="costGz">
		update
		cost_gz
		set
		accumulation_fund_radix = #{accumulationFundRadix,jdbcType=DOUBLE},
		accumulation_fund_company_ratio =
		#{accumulationFundCompanyRatio,jdbcType=VARCHAR},
		accumulation_fund_company_pay =
		#{accumulationFundCompanyPay,jdbcType=DOUBLE},
		accumulation_fund_person_ratio =
		#{accumulationFundPersonRatio,jdbcType=VARCHAR},
		accumulation_fund_person_pay =
		#{accumulationFundPersonPay,jdbcType=DOUBLE},
		accumulation_fund_total =
		#{accumulationFundTotal,jdbcType=DOUBLE},
		system_person_number =
		#{systemPersonNumber,jdbcType=VARCHAR},
		company =
		#{company,jdbcType=VARCHAR},
		manager = #{manager,jdbcType=VARCHAR}
		where
		reporting_period
		=#{reportingPeriod}
		and
		certificate_number
		=#{certificateNumber}
	</update>

	<!-- -->
	<delete id="deleteGZhomeDetails">
		delete from cost_gz where supplier_id =#{supplierId}
		and reporting_period
		=#{reportingPeriod}
	</delete>


	<!-- 根据月份、身份证号码查询费用信息是否已经导入系统 -->
	<select id="isCostImport" resultType="int">
		select
		cg_id
		from
		cost_gz
		where
		reporting_period = #{yearMonth}
		and
		certificate_number =
		#{certificateNumber}
	</select>

	<!-- 更新缴费信息 -->
	<update id="updateCostGz" parameterType="costGz">
		update
		cost_gz
		set
		pension_radix = #{pensionRadix,jdbcType=DOUBLE},
		pension_company_pay =
		#{pensionCompanyPay,jdbcType=DOUBLE},
		pension_person_pay =
		#{pensionPersonPay,jdbcType=DOUBLE},
		unemployment_radix =
		#{unemploymentRadix,jdbcType=DOUBLE},
		unemployment_company_pay =
		#{unemploymentCompanyPay,jdbcType=DOUBLE},
		unemployment_person_pay =
		#{unemploymentPersonPay,jdbcType=DOUBLE},
		injury_company_radix =
		#{injuryCompanyRadix,jdbcType=DOUBLE},
		injury_company_pay =
		#{injuryCompanyPay,jdbcType=DOUBLE},
		injury_person_pay =
		#{injuryPersonPay,jdbcType=DOUBLE},
		procreate_company_radix =
		#{procreateCompanyRadix,jdbcType=DOUBLE},
		procreate_company_pay =
		#{procreateCompanyPay,jdbcType=DOUBLE},
		procreate_person_pay =
		#{procreatePersonPay,jdbcType=DOUBLE},
		medical_treatment_radix =
		#{medicalTreatmentRadix,jdbcType=DOUBLE},
		medical_treatment_company_pay
		=
		#{medicalTreatmentCompanyPay,jdbcType=DOUBLE},
		medical_treatment_person_pay =
		#{medicalTreatmentPersonPay,jdbcType=DOUBLE},
		serious_illness_radix =
		#{seriousIllnessRadix,jdbcType=DOUBLE},
		serious_illness_company_pay =
		#{seriousIllnessCompanyPay,jdbcType=DOUBLE},
		serious_illness_person_pay
		=
		#{seriousIllnessPersonPay,jdbcType=DOUBLE},
		company_total =
		#{companyTotal,jdbcType=DOUBLE},
		person_total =
		#{personTotal,jdbcType=DOUBLE},
		social_security_total =
		#{socialSecurityTotal,jdbcType=DOUBLE}
		where
		reporting_period =
		#{reportingPeriod}
		and
		certificate_number =
		#{certificateNumber}
	</update>

	<!-- 按月份查询供应商分组账单 -->
	<select id="costGroupBySupplier" resultType="map">
		SELECT
		s.s_id,
		s.supplier_name,
		cg.reporting_period,
		sum(cg.social_security_total+cg.accumulation_fund_total) gongsiHeji,
		sum(cg.social_security_total) shebaoHeji,
		sum(cg.accumulation_fund_company_pay)
		gongjijinGongsi,
		sum(cg.accumulation_fund_person_pay)
		gongjijinGeren,
		sum(cg.accumulation_fund_total) gongjijinHeji
		FROM
		cost_gz cg,supplier s
		WHERE
		s.s_id = cg.supplier_id
		AND
		cg.reporting_period = #{yearMonth}
		GROUP BY
		supplier_id
	</select>
	
	<!-- 按供应商查询某月份费用信息 -->
	<select id="selectCostBySupplier" resultMap="BaseResultMap">
	    SELECT
	    <include refid="Base_Column_List"/>
	    FROM
	    cost_gz
	    WHERE
	    reporting_period = #{yearMonth}
	    AND
	    supplier_id = #{supplierId}
	</select>

</mapper>