<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dianmi.mapper.UserMapper">
	<resultMap id="BaseResultMap" type="user">
		<constructor>
			<idArg column="u_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
			<arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
			<arg column="mobile_phone" jdbcType="VARCHAR" javaType="java.lang.String" />
			<arg column="password" jdbcType="VARCHAR" javaType="java.lang.String" />
			<arg column="department" jdbcType="VARCHAR" javaType="java.lang.String" />
			<arg column="role_type" jdbcType="TINYINT" javaType="java.lang.Byte" />
			<arg column="email" jdbcType="VARCHAR" javaType="java.lang.String" />
		</constructor>
	</resultMap>
	<sql id="Base_Column_List">
		u_id, name, mobile_phone, password, department, role_type,
		email
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from user
		where u_id = #{uId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from user
		where u_id = #{uId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.dianmi.model.User">
		insert into user (u_id, name,
		mobile_phone,
		password, department, role_type,
		email)
		values
		(#{uId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
		#{mobilePhone,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{department,jdbcType=VARCHAR}, #{roleType,jdbcType=TINYINT},
		#{email,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.dianmi.model.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="uId != null">
				u_id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="mobilePhone != null">
				mobile_phone,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="department != null">
				department,
			</if>
			<if test="roleType != null">
				role_type,
			</if>
			<if test="email != null">
				email,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="uId != null">
				#{uId,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="mobilePhone != null">
				#{mobilePhone,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="department != null">
				#{department,jdbcType=VARCHAR},
			</if>
			<if test="roleType != null">
				#{roleType,jdbcType=TINYINT},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.dianmi.model.User">
		update user
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="mobilePhone != null">
				mobile_phone = #{mobilePhone,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="department != null">
				department = #{department,jdbcType=VARCHAR},
			</if>
			<if test="roleType != null">
				role_type = #{roleType,jdbcType=TINYINT},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
		</set>
		where u_id = #{uId,jdbcType=INTEGER}
	</update>

	<update id="updateByPrimaryKey" parameterType="com.dianmi.model.User">
		update user
		set
		name = #{name,jdbcType=VARCHAR},
		mobile_phone =
		#{mobilePhone,jdbcType=VARCHAR},
		password =
		#{password,jdbcType=VARCHAR},
		department =
		#{department,jdbcType=VARCHAR},
		role_type =
		#{roleType,jdbcType=TINYINT},
		email = #{email,jdbcType=VARCHAR}
		where
		u_id = #{uId,jdbcType=INTEGER}
	</update>

	<select id="selectByUsername" resultType="int" parameterType="string">
		select u_id from user
		where mobile_phone = #{username} or	email = #{username}
	</select>

	<select id="selectByUsernameAndPassword" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user
		where (mobile_phone = #{username} or email = #{username})
		and
		password = #{password}
	</select>

	<select id="selectPasswordById" resultType="String">
		select password from
		user where u_id = #{id}
	</select>

	<update id="updateUserById">
		update user set name = #{name},department =
		#{department} where u_id = #{id}
	</update>

	<update id="updatePasswrodById">
		update user set password = #{password} where u_id =
		#{id}
	</update>


	<select id="findUserName" parameterType="java.lang.Integer" resultType="java.lang.String">
		select name from user where u_id=#{uId}
	</select>





</mapper>