<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--suppress ALL -->
<mapper namespace="com.dianmi.mapper.ZaiceMapper">
    <resultMap id="BaseResultMap" type="zaice" autoMapping="true">
        <constructor>
            <idArg column="zc_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="dept_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="customer_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="supplier_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="fuwufangan_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="financial_accounting_unit" jdbcType="VARCHAR"
                 javaType="java.lang.String"/>
            <arg column="customer_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="employee_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="certificate_type" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="certificate_number" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="nation" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="mobile_phone" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="is_external_call" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="household_city" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="household_property" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="city" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="social_security_card_number" jdbcType="VARCHAR"
                 javaType="java.lang.String"/>
            <arg column="social_security_base" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="social_security_type" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="supplier" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="social_security_begin_time" jdbcType="VARCHAR"
                 javaType="java.lang.String"/>
            <arg column="accumulation_fund_number" jdbcType="VARCHAR"
                 javaType="java.lang.String"/>
            <arg column="accumulation_fund_cardinal_number" jdbcType="VARCHAR"
                 javaType="java.lang.String"/>
            <arg column="accumulation_fund_ratio" jdbcType="VARCHAR"
                 javaType="java.lang.String"/>
            <arg column="accumulation_fund_begin_time" jdbcType="VARCHAR"
                 javaType="java.lang.String"/>
            <arg column="import_date" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="remark" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="reporting_period" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="status" jdbcType="TINYINT" javaType="java.lang.Byte"/>
            <arg column="zaice_flag" jdbcType="TINYINT" javaType="java.lang.Byte"/>
            <arg column="delete_flag" jdbcType="TINYINT" javaType="java.lang.Byte"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
		zc_id, user_id, dept_id,customer_id, supplier_id,
		fuwufangan_id,
		financial_accounting_unit,
		customer_name, employee_name,
		certificate_type, certificate_number, nation,
		mobile_phone,
		is_external_call, household_city, household_property, city,
		social_security_card_number,
		social_security_base,
		social_security_type, supplier, social_security_begin_time,
		accumulation_fund_number, accumulation_fund_cardinal_number,
		accumulation_fund_ratio,
		accumulation_fund_begin_time, import_date,
		remark, reporting_period,status, zaice_flag,delete_flag
	</sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap"
            parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from zaice
        where zc_id = #{zcId,jdbcType=INTEGER}
    </select>

    <select id="selectSupplierBySupplierId" resultType="java.lang.String">
		select
		supplier
		from
		zaice
		where
		city=#{city}
		and
		supplier_id=#{supplierId}
	</select>

    <select id="selectZaiceMsg" resultType="map">
		select
		zc_id,customer_id,customer_name from
		zaice
		where
		reporting_period=#{yearMonth}
		and
		city=#{city}
		and
		certificate_number=#{certificateNumber}
	</select>

    <select id="selectHouseType" resultType="java.lang.String">
		select
		household_property
		from
		zaice
		where city=#{city}
		and
		reporting_period=#{reportingPeriod}
		and
		certificate_number=#{certificateNumber}
	</select>

    <select id="findAccountingUnit" resultType="java.lang.String">
		select
		financial_accounting_unit from zaice where city=#{city} and
		supplier_id=#{supplierId}
		and reporting_period=#{reportingPeriod} and
		user_id=#{userId}
	</select>


    <select id="getSupplierIdBySupplier" resultType="java.lang.Integer">
		select
		supplier_id from zaice where city=#{city} and supplier=#{supplier} and
		certificate_number=#{certificateNumber}
	</select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from zaice
		where zc_id = #{zcId,jdbcType=INTEGER}
	</delete>
    <insert id="insert" parameterType="zaice">
		insert into zaice (zc_id,
		user_id,dept_id, customer_id,
		supplier_id, fuwufangan_id,
		financial_accounting_unit,
		customer_name, employee_name,
		certificate_type,
		certificate_number, nation, mobile_phone,
		is_external_call, household_city, household_property,
		city,
		social_security_card_number, social_security_base,
		social_security_type, supplier, social_security_begin_time,
		accumulation_fund_number, accumulation_fund_cardinal_number,
		accumulation_fund_ratio, accumulation_fund_begin_time,
		import_date,
		remark, reporting_period,status,
		zaice_flag,delete_flag)
		values
		(#{zcId,jdbcType=INTEGER},
		#{userId,jdbcType=INTEGER},
		#{deptId,jdbcType=INTEGER},
		#{customerId,jdbcType=INTEGER},
		#{supplierId,jdbcType=INTEGER},
		#{fuwufanganId,jdbcType=INTEGER},
		#{financialAccountingUnit,jdbcType=VARCHAR},
		#{customerName,jdbcType=VARCHAR}, #{employeeName,jdbcType=VARCHAR},
		#{certificateType,jdbcType=VARCHAR},
		#{certificateNumber,jdbcType=VARCHAR}, #{nation,jdbcType=VARCHAR},
		#{mobilePhone,jdbcType=VARCHAR},
		#{isExternalCall,jdbcType=VARCHAR},
		#{householdCity,jdbcType=VARCHAR},
		#{householdProperty,jdbcType=VARCHAR},
		#{city,jdbcType=VARCHAR},
		#{socialSecurityCardNumber,jdbcType=VARCHAR},
		#{socialSecurityBase,jdbcType=VARCHAR},
		#{socialSecurityType,jdbcType=VARCHAR}, #{supplier,jdbcType=VARCHAR},
		#{socialSecurityBeginTime,jdbcType=VARCHAR},
		#{accumulationFundNumber,jdbcType=VARCHAR},
		#{accumulationFundCardinalNumber,jdbcType=VARCHAR},
		#{accumulationFundRatio,jdbcType=VARCHAR},
		#{accumulationFundBeginTime,jdbcType=VARCHAR},
		#{importDate,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR},
		#{reportingPeriod,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT},
		#{zaiceFlag,jdbcType=TINYINT},#{deleteFlag,jdbcType=TINYINT})
	</insert>
    <insert id="insertSelective" parameterType="zaice">
        insert into zaice
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="zcId != null">
                zc_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="deptId != null">
                dept_id,
            </if>
            <if test="customerId != null">
                customer_id,
            </if>
            <if test="supplierId != null">
                supplier_id,
            </if>
            <if test="fuwufanganId != null">
                fuwufangan_id,
            </if>
            <if test="financialAccountingUnit != null">
                financial_accounting_unit,
            </if>
            <if test="customerName != null">
                customer_name,
            </if>
            <if test="employeeName != null">
                employee_name,
            </if>
            <if test="certificateType != null">
                certificate_type,
            </if>
            <if test="certificateNumber != null">
                certificate_number,
            </if>
            <if test="nation != null">
                nation,
            </if>
            <if test="mobilePhone != null">
                mobile_phone,
            </if>
            <if test="isExternalCall != null">
                is_external_call,
            </if>
            <if test="householdCity != null">
                household_city,
            </if>
            <if test="householdProperty != null">
                household_property,
            </if>
            <if test="city != null">
                city,
            </if>
            <if test="socialSecurityCardNumber != null">
                social_security_card_number,
            </if>
            <if test="socialSecurityBase != null">
                social_security_base,
            </if>
            <if test="socialSecurityType != null">
                social_security_type,
            </if>
            <if test="supplier != null">
                supplier,
            </if>
            <if test="socialSecurityBeginTime != null">
                social_security_begin_time,
            </if>
            <if test="accumulationFundNumber != null">
                accumulation_fund_number,
            </if>
            <if test="accumulationFundCardinalNumber != null">
                accumulation_fund_cardinal_number,
            </if>
            <if test="accumulationFundRatio != null">
                accumulation_fund_ratio,
            </if>
            <if test="accumulationFundBeginTime != null">
                accumulation_fund_begin_time,
            </if>
            <if test="importDate != null">
                import_date,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="reportingPeriod != null">
                reporting_period,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="zaiceFlag != null">
                zaice_flag,
            </if>
            <if test="deleteFlag != null">
                delete_flag,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="zcId != null">
                #{zcId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="deptId != null">
                #{deptId,jdbcType=INTEGER},
            </if>
            <if test="customerId != null">
                #{customerId,jdbcType=INTEGER},
            </if>
            <if test="supplierId != null">
                #{supplierId,jdbcType=INTEGER},
            </if>
            <if test="fuwufanganId != null">
                #{fuwufanganId,jdbcType=INTEGER},
            </if>
            <if test="financialAccountingUnit != null">
                #{financialAccountingUnit,jdbcType=VARCHAR},
            </if>
            <if test="customerName != null">
                #{customerName,jdbcType=VARCHAR},
            </if>
            <if test="employeeName != null">
                #{employeeName,jdbcType=VARCHAR},
            </if>
            <if test="certificateType != null">
                #{certificateType,jdbcType=VARCHAR},
            </if>
            <if test="certificateNumber != null">
                #{certificateNumber,jdbcType=VARCHAR},
            </if>
            <if test="nation != null">
                #{nation,jdbcType=VARCHAR},
            </if>
            <if test="mobilePhone != null">
                #{mobilePhone,jdbcType=VARCHAR},
            </if>
            <if test="isExternalCall != null">
                #{isExternalCall,jdbcType=VARCHAR},
            </if>
            <if test="householdCity != null">
                #{householdCity,jdbcType=VARCHAR},
            </if>
            <if test="householdProperty != null">
                #{householdProperty,jdbcType=VARCHAR},
            </if>
            <if test="city != null">
                #{city,jdbcType=VARCHAR},
            </if>
            <if test="socialSecurityCardNumber != null">
                #{socialSecurityCardNumber,jdbcType=VARCHAR},
            </if>
            <if test="socialSecurityBase != null">
                #{socialSecurityBase,jdbcType=VARCHAR},
            </if>
            <if test="socialSecurityType != null">
                #{socialSecurityType,jdbcType=VARCHAR},
            </if>
            <if test="supplier != null">
                #{supplier,jdbcType=VARCHAR},
            </if>
            <if test="socialSecurityBeginTime != null">
                #{socialSecurityBeginTime,jdbcType=VARCHAR},
            </if>
            <if test="accumulationFundNumber != null">
                #{accumulationFundNumber,jdbcType=VARCHAR},
            </if>
            <if test="accumulationFundCardinalNumber != null">
                #{accumulationFundCardinalNumber,jdbcType=VARCHAR},
            </if>
            <if test="accumulationFundRatio != null">
                #{accumulationFundRatio,jdbcType=VARCHAR},
            </if>
            <if test="accumulationFundBeginTime != null">
                #{accumulationFundBeginTime,jdbcType=VARCHAR},
            </if>
            <if test="importDate != null">
                #{importDate,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="reportingPeriod != null">
                #{reportingPeriod,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="zaiceFlag != null">
                #{zaiceFlag,jdbcType=TINYINT},
            </if>
            <if test="deleteFlag != null">
                #{deleteFlag,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="zaice">
        update zaice
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="deptId != null">
                dept_id = #{deptId,jdbcType=INTEGER},
            </if>
            <if test="customerId != null">
                customer_id = #{customerId,jdbcType=INTEGER},
            </if>
            <if test="supplierId != null">
                supplier_id = #{supplierId,jdbcType=INTEGER},
            </if>
            <if test="fuwufanganId != null">
                fuwufangan_id = #{fuwufanganId,jdbcType=INTEGER},
            </if>
            <if test="financialAccountingUnit != null">
                financial_accounting_unit =
                #{financialAccountingUnit,jdbcType=VARCHAR},
            </if>
            <if test="customerName != null">
                customer_name = #{customerName,jdbcType=VARCHAR},
            </if>
            <if test="employeeName != null">
                employee_name = #{employeeName,jdbcType=VARCHAR},
            </if>
            <if test="certificateType != null">
                certificate_type = #{certificateType,jdbcType=VARCHAR},
            </if>
            <if test="certificateNumber != null">
                certificate_number =
                #{certificateNumber,jdbcType=VARCHAR},
            </if>
            <if test="nation != null">
                nation = #{nation,jdbcType=VARCHAR},
            </if>
            <if test="mobilePhone != null">
                mobile_phone = #{mobilePhone,jdbcType=VARCHAR},
            </if>
            <if test="isExternalCall != null">
                is_external_call = #{isExternalCall,jdbcType=VARCHAR},
            </if>
            <if test="householdCity != null">
                household_city = #{householdCity,jdbcType=VARCHAR},
            </if>
            <if test="householdProperty != null">
                household_property =
                #{householdProperty,jdbcType=VARCHAR},
            </if>
            <if test="city != null">
                city = #{city,jdbcType=VARCHAR},
            </if>
            <if test="socialSecurityCardNumber != null">
                social_security_card_number =
                #{socialSecurityCardNumber,jdbcType=VARCHAR},
            </if>
            <if test="socialSecurityBase != null">
                social_security_base =
                #{socialSecurityBase,jdbcType=VARCHAR},
            </if>
            <if test="socialSecurityType != null">
                social_security_type =
                #{socialSecurityType,jdbcType=VARCHAR},
            </if>
            <if test="supplier != null">
                supplier = #{supplier,jdbcType=VARCHAR},
            </if>
            <if test="socialSecurityBeginTime != null">
                social_security_begin_time =
                #{socialSecurityBeginTime,jdbcType=VARCHAR},
            </if>
            <if test="accumulationFundNumber != null">
                accumulation_fund_number =
                #{accumulationFundNumber,jdbcType=VARCHAR},
            </if>
            <if test="accumulationFundCardinalNumber != null">
                accumulation_fund_cardinal_number =
                #{accumulationFundCardinalNumber,jdbcType=VARCHAR},
            </if>
            <if test="accumulationFundRatio != null">
                accumulation_fund_ratio =
                #{accumulationFundRatio,jdbcType=VARCHAR},
            </if>
            <if test="accumulationFundBeginTime != null">
                accumulation_fund_begin_time =
                #{accumulationFundBeginTime,jdbcType=VARCHAR},
            </if>
            <if test="importDate != null">
                import_date = #{importDate,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="reportingPeriod != null">
                reporting_period = #{reportingPeriod,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="zaiceFlag != null">
                zaice_flag = #{zaiceFlag,jdbcType=TINYINT},
            </if>
            <if test="deleteFlag != null">
                delete_flag = #{deleteFlag,jdbcType=TINYINT},
            </if>
        </set>
        where zc_id = #{zcId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="zaice">
		update zaice
		set
		user_id = #{userId,jdbcType=INTEGER},
		dept_id =
		#{deptId,jdbcType=INTEGER},
		customer_id =
		#{customerId,jdbcType=INTEGER},
		supplier_id =
		#{supplierId,jdbcType=INTEGER},
		fuwufangan_id =
		#{fuwufanganId,jdbcType=INTEGER},
		financial_accounting_unit =
		#{financialAccountingUnit,jdbcType=VARCHAR},
		customer_name =
		#{customerName,jdbcType=VARCHAR},
		employee_name =
		#{employeeName,jdbcType=VARCHAR},
		certificate_type =
		#{certificateType,jdbcType=VARCHAR},
		certificate_number =
		#{certificateNumber,jdbcType=VARCHAR},
		nation =
		#{nation,jdbcType=VARCHAR},
		mobile_phone =
		#{mobilePhone,jdbcType=VARCHAR},
		is_external_call =
		#{isExternalCall,jdbcType=VARCHAR},
		household_city =
		#{householdCity,jdbcType=VARCHAR},
		household_property =
		#{householdProperty,jdbcType=VARCHAR},
		city = #{city,jdbcType=VARCHAR},
		social_security_card_number =
		#{socialSecurityCardNumber,jdbcType=VARCHAR},
		social_security_base =
		#{socialSecurityBase,jdbcType=VARCHAR},
		social_security_type =
		#{socialSecurityType,jdbcType=VARCHAR},
		supplier =
		#{supplier,jdbcType=VARCHAR},
		social_security_begin_time =
		#{socialSecurityBeginTime,jdbcType=VARCHAR},
		accumulation_fund_number =
		#{accumulationFundNumber,jdbcType=VARCHAR},
		accumulation_fund_cardinal_number =
		#{accumulationFundCardinalNumber,jdbcType=VARCHAR},
		accumulation_fund_ratio = #{accumulationFundRatio,jdbcType=VARCHAR},
		accumulation_fund_begin_time =
		#{accumulationFundBeginTime,jdbcType=VARCHAR},
		import_date =
		#{importDate,jdbcType=TIMESTAMP},
		remark = #{remark,jdbcType=VARCHAR},
		reporting_period = #{reportingPeriod,jdbcType=VARCHAR},
		status =
		#{status,jdbcType=TINYINT},
		zaice_flag = #{zaiceFlag,jdbcType=TINYINT},
		delete_flag = #{deleteFlag,jdbcType=TINYINT}
		where zc_id =
		#{zcId,jdbcType=INTEGER}
	</update>

    <select id="selectBySocialMsg" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from zaice where import_date = (select operation_time from
        operation_record where user_id = #{userId} and or_id =
        #{operationRecordId})
    </select>

    <select id="selectByEmployeeMsg" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from zaice
        where
        city = #{city}
        and
        reporting_period = #{reportingPeriod}
        and
        certificate_number = #{certificateNumber}
    </select>

    <resultMap id="BasePoResultMap" type="com.dianmi.model.po.ZaicePo">
        <id column="zc_id" property="id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <result column="customer_tag" property="customerTag" jdbcType="VARCHAR"
                javaType="java.lang.String"/>
        <result column="supplier_name" property="supplierName"
                jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="fuwufangan_name" property="fuwufanganName"
                jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="financial_accounting_unit" property="financialAccountingUnit"
                jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="customer_name" property="customerName"
                jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="employee_name" property="employeeName"
                jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="certificate_type" property="certificateType"
                jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="certificate_number" property="certificateNumber"
                jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="nation" property="nation" jdbcType="VARCHAR"
                javaType="java.lang.String"/>
        <result column="mobile_phone" property="mobilePhone" jdbcType="VARCHAR"
                javaType="java.lang.String"/>
        <result column="is_external_call" property="isExternalCall"
                jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="household_city" property="householdCity"
                jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="household_property" property="householdProperty"
                jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="city" property="city" jdbcType="VARCHAR"
                javaType="java.lang.String"/>
        <result column="social_security_card_number" property="socialSecurityCardNumber"
                jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="social_security_base" property="socialSecurityBase"
                jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="social_security_type" property="socialSecurityType"
                jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="supplier" property="supplier" jdbcType="VARCHAR"
                javaType="java.lang.String"/>
        <result column="social_security_begin_time" property="socialSecurityBeginTime"
                jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="accumulation_fund_number" property="accumulationFundNumber"
                jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="accumulation_fund_cardinal_number" property="accumulationFundCardinalNumber"
                jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="accumulation_fund_ratio" property="accumulationFundRatio"
                jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="accumulation_fund_begin_time" property="accumulationFundBeginTime"
                jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="import_date" property="importDate" jdbcType="TIMESTAMP"
                javaType="java.util.Date"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"
                javaType="java.lang.String"/>
        <result column="reporting_period" property="reportingPeriod"
                jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="status" property="status" jdbcType="TINYINT"
                javaType="java.lang.Byte"/>
        <result column="zaice_flag" property="zaiceFlag" jdbcType="TINYINT"
                javaType="java.lang.Byte"/>
        <result column="delete_flag" property="deleteFlag" jdbcType="TINYINT"
                javaType="java.lang.Byte"/>
    </resultMap>

    <select id="zaicePaging" resultMap="BasePoResultMap">
        <!-- type:1、当月目标在册2、当月实际在册3、当月增员、4当月减员 -->
        <if test="type == 1">
            select
            zc.zc_id,
            c.customer_name customer_tag,
            s.supplier_name,
            f.product_name,
            zc.financial_accounting_unit,
            zc.customer_name,
            zc.employee_name,
            zc.certificate_type,
            zc.certificate_number,
            zc.nation,
            zc.mobile_phone,
            zc.is_external_call,
            zc.household_city,
            zc.household_property,
            zc.city,
            zc.social_security_card_number,
            zc.social_security_base,
            zc.social_security_type,
            zc.supplier,
            zc.social_security_begin_time,
            zc.accumulation_fund_number,
            zc.accumulation_fund_cardinal_number,
            zc.accumulation_fund_ratio,
            zc.accumulation_fund_begin_time,
            zc.import_date,
            zc.remark,
            zc.reporting_period,
            zc.status,
            zc.zaice_flag
            from
            user u,
            zaice zc,
            customer c,
            supplier s,
            fuwufangan f
            where
            zc.zaice_flag = 0
            and status != 2
            and zc.delete_flag = 0
            and zc.customer_id = c.c_id
            and zc.user_id = u.u_id
            and zc.fuwufangan_id = f.fw_id
            and zc.supplier_id = s.s_id
            and zc.supplier_id in(select s_id from supplier where user_id = #{userId})
            and zc.reporting_period=#{reportingPeriod}
            <if test="supplierId != null">
                and zc.supplier_id=#{supplierId}
            </if>
            <if test="customerId != null">
                and zc.customer_id=#{customerId}
            </if>
            <if test="cityName != null">
                and zc.city=#{cityName}
            </if>
            <if test="paramName != null">
                and concat(s.supplier_name,c.customer_name) like #{paramName}
            </if>
            order by c.c_id
        </if>
        <if test="type == 2">
            select
            zc.zc_id,
            c.customer_name customer_tag,
            s.supplier_name,
            f.product_name,
            zc.financial_accounting_unit,
            zc.customer_name,
            zc.employee_name,
            zc.certificate_type,
            zc.certificate_number,
            zc.nation,
            zc.mobile_phone,
            zc.is_external_call,
            zc.household_city,
            zc.household_property,
            zc.city,
            zc.social_security_card_number,
            zc.social_security_base,
            zc.social_security_type,
            zc.supplier,
            zc.social_security_begin_time,
            zc.accumulation_fund_number,
            zc.accumulation_fund_cardinal_number,
            zc.accumulation_fund_ratio,
            zc.accumulation_fund_begin_time,
            zc.import_date,
            zc.remark,
            zc.reporting_period,
            zc.status,
            zc.zaice_flag
            from
            user u,
            zaice zc,
            customer c,
            supplier s,
            fuwufangan f
            where
            status != 2
            and zc.zaice_flag = 1
            and zc.delete_flag = 0
            and zc.customer_id = c.c_id
            and zc.user_id = u.u_id
            and zc.fuwufangan_id = f.fw_id
            and zc.supplier_id=s.s_id
            and zc.supplier_id in(select s_id from supplier where user_id = #{userId})
            and zc.reporting_period = #{reportingPeriod}
            <if test="supplierId != null">
                and zc.supplier_id=#{supplierId}
            </if>
            <if test="customerId != null">
                and zc.customer_id=#{customerId}
            </if>
            <if test="cityName != null">
                and zc.city=#{cityName}
            </if>
            <if test="paramName != null">
                and concat(s.supplier_name,c.customer_name) like #{paramName}
            </if>
            order by
            c.c_id
        </if>
        <if test="type == 3">
            select
            zc.zc_id,
            c.customer_name customer_tag,
            s.supplier_name,
            f.product_name,
            zc.financial_accounting_unit,
            zc.customer_name,
            zc.employee_name,
            zc.certificate_type,
            zc.certificate_number,
            zc.nation,
            zc.mobile_phone,
            zc.is_external_call,
            zc.household_city,
            zc.household_property,
            zc.city,
            zc.social_security_card_number,
            zc.social_security_base,
            zc.social_security_type,
            zc.supplier,
            zc.social_security_begin_time,
            zc.accumulation_fund_number,
            zc.accumulation_fund_cardinal_number,
            zc.accumulation_fund_ratio,
            zc.accumulation_fund_begin_time,
            zc.import_date,
            zc.remark,
            zc.reporting_period,
            zc.status,
            zc.zaice_flag
            from
            user u,
            zaice zc,
            customer c,
            supplier s,
            fuwufangan f
            where zc.status = 1
            and zc.delete_flag = 0
            and zc.customer_id = c.c_id
            and zc.user_id = u.u_id
            and zc.fuwufangan_id = f.fw_id
            and zc.supplier_id = s.s_id
            and zc.supplier_id in(select s_id from supplier where user_id = #{userId})
            and zc.reporting_period = #{reportingPeriod}
            <if test="supplierId != null">
                and zc.supplier_id=#{supplierId}
            </if>
            <if test="customerId != null">
                and zc.customer_id=#{customerId}
            </if>
            <if test="cityName != null">
                and zc.city=#{cityName}
            </if>
            <if test="paramName != null">
                and concat(s.supplier_name,c.customer_name) like #{paramName}
            </if>
            order by
            c.c_id
        </if>
        <if test="type == 4">
            select
            zc.zc_id,
            c.customer_name customer_tag,
            s.supplier_name,
            f.product_name,
            zc.financial_accounting_unit,
            zc.customer_name,
            zc.employee_name,
            zc.certificate_type,
            zc.certificate_number,
            zc.nation,
            zc.mobile_phone,
            zc.is_external_call,
            zc.household_city,
            zc.household_property,
            zc.city,
            zc.social_security_card_number,
            zc.social_security_base,
            zc.social_security_type,
            zc.supplier,
            zc.social_security_begin_time,
            zc.accumulation_fund_number,
            zc.accumulation_fund_cardinal_number,
            zc.accumulation_fund_ratio,
            zc.accumulation_fund_begin_time,
            zc.import_date,
            zc.remark,
            zc.reporting_period,
            zc.status,
            zc.zaice_flag
            from
            user u,
            zaice zc,
            customer c,
            supplier s,
            fuwufangan f
            where zc.status = 2
            and zc.delete_flag = 0
            and zc.customer_id = c.c_id
            and zc.user_id = u.u_id
            and zc.fuwufangan_id = f.fw_id
            and zc.supplier_id = s.s_id
            and zc.supplier_id in(select s_id from supplier where user_id = #{userId})
            and zc.reporting_period = #{reportingPeriod}
            <if test="supplierId != null">
                and zc.supplier_id=#{supplierId}
            </if>
            <if test="customerId != null">
                and zc.customer_id=#{customerId}
            </if>
            <if test="cityName != null">
                and zc.city=#{cityName}
            </if>
            <if test="paramName != null">
                and concat(s.supplier_name,c.customer_name) like #{paramName}
            </if>
            order by
            c.c_id
        </if>
    </select>


    <update id="updateAddSocialStatus">
        update
        zaice
        set
        zaice_flag= 1
        where
        city=#{city}
        and
        reporting_period=#{yearMonth}
        and
        certificate_number=#{certificateNumber}
    </update>


    <!-- 删除实际在册 -->
    <update id="updateDeleteFlag" parameterType="int">
        update zaice
        set
        delete_flag = 1
        where
        zaice_flag = 1
        and
        zc_id = #{zcId}
    </update>

    <!-- 修改在册删除状态 -->
    <update id="updateDeleteFlagStatus">
        update
        zaice
        set
        delete_flag = #{deleteFlag}
        where
        zc_id =
        #{zcId}
    </update>


    <select id="getMubiaoZaice" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from
        zaice
        where
        zaice_flag = 1
        and
        delete_flag = 0
        and
        reporting_period =
        #{reportingPeriod}
    </select>


    <select id="findAccumulationInfos" resultType="com.dianmi.model.Zaice">
        select
        accumulation_fund_number,accumulation_fund_cardinal_number,accumulation_fund_ratio
        from zaice where city=#{city}
        and
        reporting_period=#{reportingPeriod}
        and
        certificate_number=#{certificateNumber}
    </select>


    <select id="findCertificateType" resultType="java.lang.String">
        select
        certificate_type from zaice where employee_name=#{employeeName}
        and
        certificate_number=#{certificateNumber} and supplier_id=#{supplierId}
    </select>

    <select id="findAccumulationFundBeginTime" resultType="java.lang.String">
        select
        accumulation_fund_begin_time from zaice
        where city=#{city} and
        supplier_id=#{supplierId}
        and reporting_period=#{reportingPeriod} and
        certificate_number=#{certificateNumber}
    </select>


    <select id="isZaiceExists" resultType="int">
        select
        zc_id
        from
        zaice
        where
        city = #{city}
        and
        reporting_period = #{yearMonth}
        and
        certificate_number
        = #{certificateNumber}
        and
        delete_flag = 0
    </select>

    <!-- 获取增减员所有供应商信息 -->
    <select id="selectAllSupplier" resultType="map">
        SELECT
        DISTINCT
        s.s_id,
        s.supplier_name
        FROM
        zaice zc,supplier s
        WHERE
        zc.supplier_id = s.s_id
        AND
        zc.reporting_period = #{yearMonth}
        <if test="roleType == 2">
            AND
            zc.supplier_id in (select s_id from supplier where
            user_id = #{userId})
        </if>
        AND
        zc.status in(1,2)
        AND
        zc.delete_flag = 0
        order by s.s_id desc
    </select>

    <!-- 根据供应商id获取供应商某月份所有增员信息 -->
    <select id="getZengyuanBySupplierId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from
        zaice
        where
        reporting_period = #{yearMonth}
        and
        status != 2
        and
        zaice_flag = 0
        and
        delete_flag = 0
        and
        supplier_id = #{supplierId}
    </select>

    <!-- 根据供应商id获取供应商某月份所有减员信息 -->
    <select id="getJianyuanBySupplierId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from
        zaice
        where
        reporting_period = #{yearMonth}
        and
        status = 2
        and
        zaice_flag = 0
        and
        delete_flag = 0
        and
        supplier_id = #{supplierId}
    </select>

    <select id="supplierSpinner" resultType="map">
        -- 在册供应商
        select
        z.supplier_id code,
        s.supplier_name message
        FROM
        zaice z,
        supplier s
        WHERE z.supplier_id=s.s_id
        <if test="roleType == 2">
            and z.user_id=#{userId}
        </if>
        <if test="paramName != null">
            and s.supplier_name like #{paramName}
        </if>
        group by
        z.supplier_id
    </select>

    <select id="citySpinner" resultType="map">
        -- 在册城市
        select
        distinct z.city message
        FROM
        zaice z
        WHERE 1=1
        <if test="roleType == 2">
            and z.user_id=#{userId}
        </if>
        <if test="paramName != null">
            and z.city like #{paramName}
        </if>
        group by
        z.city
    </select>

    <select id="baseZaicePageList" resultType="zaicedatashow">
        select
        z.customer_id customerId,
        z.customer_name customerName,
        count(z.zc_id) coundNum,
        zd.shiji_shebao_gongsi_heji shebaoGongsiHeji,
        zd.shiji_shebao_geren_heji shebaoGerenHeji,
        zd.shiji_shebao_heji shebaoHeji,
        zd.shiji_canbaojin_gongsi canbaojinGongsi,
        zd.shiji_gongjijin_gongsi gongjijinGongsi,
        zd.shiji_gongjijin_geren gongjijinGeren,
        zd.shiji_gongjijin_heji gongjijinHeji,
        zd.shiji_fuwufei fuwufei,
        zd.shiji_heji heji
        from
        zaice z,
        zhangdan zd
        where z.zc_id=zd.zaice_id
        and z.reporting_period=#{yearMonth}
        and z.delete_flag=0
        <if test="customerName != null">
            and z.customer_name like #{customerName}
        </if>
        <if test="status != null">
            and z.status=#{status}
        </if>
        <if test="zaiceflay != null">
            and z.zaice_flag=#{zaiceflay}
        </if>
        <if test="roleType == 2">
            and z.user_id=#{userId}
        </if>
        group by
        z.customer_id
    </select>


    <select id="zaiceStatistics" resultType="map">
        -- 在册数据统计
        select
        (
        select count(z.zc_id)
        from zaice z
        where z.delete_flag=0
        and z.status=1 -- 增员
        <if test="roleType == 2">
            and z.user_id=#{userId}
        </if>
        and z.reporting_period='2017-11'
        ) zengyuanNum,
        (
        select count(z.zc_id)
        from zaice z
        where z.delete_flag=0
        and z.status=2 -- 减员
        <if test="roleType == 2">
            and z.user_id=#{userId}
        </if>
        and z.reporting_period='2017-11'
        ) jianyuanNum,
        (
        select count(z.zc_id)
        from zaice z
        where z.delete_flag=0
        and z.zaice_flag=0 -- 目标在册
        <if test="roleType == 2">
            and z.user_id=#{userId}
        </if>
        and z.reporting_period='2017-11'
        ) mubiaozaiceNum,

        (
        select count(z.zc_id)
        from zaice z
        where z.delete_flag=0
        and z.zaice_flag=1 -- 实际在册
        <if test="roleType == 2">
            and z.user_id=#{userId}
        </if>
        and z.reporting_period='2017-11'
        ) shijizaiceNum;
    </select>




</mapper>