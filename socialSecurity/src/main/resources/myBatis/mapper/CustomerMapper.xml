<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dianmi.mapper.CustomerMapper">
    <resultMap id="BaseResultMap" type="customer">
        <constructor>
            <idArg column="c_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="dept_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="customer_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="mobile_phone" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="email" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="is_advance" jdbcType="TINYINT" javaType="java.lang.Byte"/>
            <arg column="advance_value" jdbcType="DOUBLE" javaType="java.lang.Double"/>
            <arg column="is_disable" jdbcType="TINYINT" javaType="java.lang.Byte"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
		c_id, customer_name, mobile_phone, email,
		c_id, customer_name, mobile_phone, email,
		is_advance,
		advance_value, is_disable,dept_id
	</sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from customer
        WHERE 1 = 1
        <if test="cId != null">
            AND c_id = #{cId}
        </if>

    </select>

    <select id="findCustomerInfo" resultType="map" parameterType="java.lang.Integer">
	SELECT c.customer_name customerName, d.dept_name  deptName FROM customer c ,kefu_dept d WHERE c.dept_id=d.kd_id AND c.c_id=#{cId}
	</select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		customer
		where c_id = #{cId,jdbcType=INTEGER}
	</delete>
    <insert id="insert" parameterType="customer">
		insert into customer (c_id,
		dept_id, customer_name,
		mobile_phone, email, is_advance
		advance_value, is_disable)
		values (#{cId,jdbcType=INTEGER},
		#{deptId,jdbcType=INTEGER},
		#{customerName,jdbcType=VARCHAR},
		#{mobilePhone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
		#{isAdvance,jdbcType=TINYINT},
		#{advanceValue,jdbcType=DOUBLE},
		#{isDisable,jdbcType=TINYINT})
	</insert>
    <insert id="insertSelective" parameterType="com.dianmi.model.Customer"
            useGeneratedKeys="true" keyProperty="cId">
        insert into customer
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="cId != null">
                cId,
            </if>
            <if test="deptId != null">
                dept_id,
            </if>
            <if test="customerName != null">
                customer_name,
            </if>
            <if test="mobilePhone != null">
                mobile_phone,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="isAdvance != null">
                is_advance,
            </if>
            <if test="advanceValue != null">
                advance_value,
            </if>
            <if test="isDisable != null">
                is_disable,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="cId != null">
                #{cId,jdbcType=INTEGER},
            </if>
            <if test="deptId != null">
                #{deptId,jdbcType=INTEGER},
            </if>
            <if test="customerName != null">
                #{customerName,jdbcType=VARCHAR},
            </if>
            <if test="mobilePhone != null">
                #{mobilePhone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="isAdvance != null">
                #{isAdvance,jdbcType=TINYINT},
            </if>
            <if test="advanceValue != null">
                #{advanceValue,jdbcType=DOUBLE},
            </if>
            <if test="isDisable != null">
                #{isDisable,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="customer">
        update customer
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="deptId != null">
                dept_id = #{deptId,jdbcType=INTEGER},
            </if>
            <if test="customerName != null">
                customer_name = #{customerName,jdbcType=VARCHAR},
            </if>
            <if test="mobilePhone != null">
                mobile_phone = #{mobilePhone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="isAdvance != null">
                is_advance = #{isAdvance,jdbcType=TINYINT},
            </if>
            <if test="advanceValue != null">
                advance_value = #{advanceValue,jdbcType=DOUBLE},
            </if>
            <if test="isDisable != null">
                is_disable = #{isDisable,jdbcType=TINYINT},
            </if>
        </set>
        where cId = #{cId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="customer">
		update customer
		set dept_id = #{deptId,jdbcType=INTEGER},
			customer_name = #{customerName,jdbcType=VARCHAR},
			mobile_phone = #{mobilePhone,jdbcType=VARCHAR},
			email = #{email,jdbcType=VARCHAR},
			is_advance = #{isAdvance,jdbcType=TINYINT},
			advance_value = #{advanceValue,jdbcType=DOUBLE},
			is_disable = #{isDisable,jdbcType=TINYINT}
		where c_id = #{cId,jdbcType=INTEGER}
	</update>


    <select id="getIdByCustomerName" parameterType="string"
            resultType="int">
		select c_id from customer where customer_name like
		#{customerName}
	</select>

    <select id="getIdByDeptIdAndCustomerName" resultType="int">
		select
		c_id
		from
		customer
		where
		dept_id = #{deptId}
		and
		customer_name = #{customerName}
	</select>


    <select id="findCustomerName" parameterType="java.lang.Integer" resultType="java.lang.String">
		select customer_name from customer where c_id=#{cId}
	</select>

    <select id="getAllCustomer" resultType="map">
	    select
	    c_id,
	    customer_name
	    from
	    customer
	</select>


    <select id="pageList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from customer
    </select>


    <select id="customerSpinner" resultType="map">
        -- 在册客户
        select
        c.c_id code,
        c.customer_name message
        from
        customer c
        where 1=1
        <if test="roleType == 2">
            and c.c_id in (SELECT z.customer_id from zaice z where z.user_id=#{userId})
        </if>
        <if test="paramName != null">
            and c.customer_name like #{paramName}
        </if>
        group by
        c.c_id
    </select>

</mapper>