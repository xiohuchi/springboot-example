<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dianmi.mapper.ZengyuanMapper">
	<resultMap id="BaseResultMap" type="zengyuan" autoMapping="true">
		<constructor>
			<idArg column="zy_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
			<arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
			<arg column="dept_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
			<arg column="customer_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
			<arg column="supplier_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
			<arg column="fuwufangan_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
			<arg column="financial_accounting_unit" jdbcType="VARCHAR"
				javaType="java.lang.String" />
			<arg column="customer_name" jdbcType="VARCHAR" javaType="java.lang.String" />
			<arg column="employee_name" jdbcType="VARCHAR" javaType="java.lang.String" />
			<arg column="certificate_type" jdbcType="VARCHAR" javaType="java.lang.String" />
			<arg column="certificate_number" jdbcType="VARCHAR" javaType="java.lang.String" />
			<arg column="nation" jdbcType="VARCHAR" javaType="java.lang.String" />
			<arg column="mobile_phone" jdbcType="VARCHAR" javaType="java.lang.String" />
			<arg column="is_external_call" jdbcType="VARCHAR" javaType="java.lang.String" />
			<arg column="household_city" jdbcType="VARCHAR" javaType="java.lang.String" />
			<arg column="household_property" jdbcType="VARCHAR" javaType="java.lang.String" />
			<arg column="city" jdbcType="VARCHAR" javaType="java.lang.String" />
			<arg column="social_security_card_number" jdbcType="VARCHAR"
				javaType="java.lang.String" />
			<arg column="social_security_base" jdbcType="VARCHAR" javaType="java.lang.String" />
			<arg column="social_security_type" jdbcType="VARCHAR" javaType="java.lang.String" />
			<arg column="supplier" jdbcType="VARCHAR" javaType="java.lang.String" />
			<arg column="social_security_begin_time" jdbcType="VARCHAR"
				javaType="java.lang.String" />
			<arg column="accumulation_fund_number" jdbcType="VARCHAR"
				javaType="java.lang.String" />
			<arg column="accumulation_fund_cardinal_number" jdbcType="VARCHAR"
				javaType="java.lang.String" />
			<arg column="accumulation_fund_ratio" jdbcType="VARCHAR"
				javaType="java.lang.String" />
			<arg column="accumulation_fund_begin_time" jdbcType="VARCHAR"
				javaType="java.lang.String" />
			<arg column="import_date" jdbcType="TIMESTAMP" javaType="java.util.Date" />
			<arg column="remark" jdbcType="VARCHAR" javaType="java.lang.String" />
			<arg column="reporting_period" jdbcType="VARCHAR" javaType="java.lang.String" />
			<arg column="status" jdbcType="TINYINT" javaType="java.lang.Byte" />
			<arg column="send_email_date" jdbcType="TIMESTAMP" javaType="java.util.Date" />
			<arg column="is_export" jdbcType="TINYINT" javaType="java.lang.Byte" />
		</constructor>
	</resultMap>
	<sql id="Base_Column_List">
		zy_id, user_id,dept_id, customer_id, supplier_id,
		fuwufangan_id,
		financial_accounting_unit,
		customer_name, employee_name,
		certificate_type, certificate_number, nation,
		mobile_phone,
		is_external_call, household_city, household_property, city,
		social_security_card_number,
		social_security_base,
		social_security_type, supplier, social_security_begin_time,
		accumulation_fund_number, accumulation_fund_cardinal_number,
		accumulation_fund_ratio,
		accumulation_fund_begin_time, import_date,
		remark, reporting_period, status, send_email_date,is_export
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from zengyuan
		where zy_id = #{zyId,jdbcType=INTEGER}
	</select>

	<select id="selectAddEmployeeName" resultType="java.lang.String">
		select
		employee_name from zengyuan where city=#{city} and
		supplier_id=#{supplierId}
		and reporting_period=#{reportingPeriod} and
		certificate_number=#{certificateNumber} and status=1
	</select>

	<select id="selectZengyuanAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from zengyuan group by city order by zy_id
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		zengyuan
		where zy_id = #{zyId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="zengyuan">
		insert into zengyuan (zy_id,
		user_id,dept_id, customer_id,
		supplier_id, fuwufangan_id,
		financial_accounting_unit,
		customer_name, employee_name,
		certificate_type,
		certificate_number, nation, mobile_phone,
		is_external_call, household_city, household_property,
		city,
		social_security_card_number, social_security_base,
		social_security_type, supplier, social_security_begin_time,
		accumulation_fund_number, accumulation_fund_cardinal_number,
		accumulation_fund_ratio, accumulation_fund_begin_time,
		import_date,
		remark, reporting_period,
		status,is_export)
		values (#{zyId,jdbcType=INTEGER},
		#{userId,jdbcType=INTEGER},
		#{deptId,jdbcType=INTEGER},
		#{customerId,jdbcType=INTEGER},
		#{supplierId,jdbcType=INTEGER},
		#{fuwufanganId,jdbcType=INTEGER},
		#{financialAccountingUnit,jdbcType=VARCHAR},
		#{customerName,jdbcType=VARCHAR}, #{employeeName,jdbcType=VARCHAR},
		#{certificateType,jdbcType=VARCHAR},
		#{certificateNumber,jdbcType=VARCHAR}, #{nation,jdbcType=VARCHAR},
		#{mobilePhone,jdbcType=VARCHAR},
		#{isExternalCall,jdbcType=VARCHAR},
		#{householdCity,jdbcType=VARCHAR},
		#{householdProperty,jdbcType=VARCHAR},
		#{city,jdbcType=VARCHAR},
		#{socialSecurityCardNumber,jdbcType=VARCHAR},
		#{socialSecurityBase,jdbcType=VARCHAR},
		#{socialSecurityType,jdbcType=VARCHAR}, #{supplier,jdbcType=VARCHAR},
		#{socialSecurityBeginTime,jdbcType=VARCHAR},
		#{accumulationFundNumber,jdbcType=VARCHAR},
		#{accumulationFundCardinalNumber,jdbcType=VARCHAR},
		#{accumulationFundRatio,jdbcType=VARCHAR},
		#{accumulationFundBeginTime,jdbcType=VARCHAR},
		#{importDate,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR},
		#{reportingPeriod,jdbcType=VARCHAR},
		#{status,jdbcType=TINYINT},
		#{isExport,jdbcType=TINYINT})
	</insert>
	<insert id="insertSelective" parameterType="zengyuan">
		insert into zengyuan
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="zyId != null">
				zy_id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="deptId != null">
				dept_id,
			</if>
			<if test="customerId != null">
				customer_id,
			</if>
			<if test="supplierId != null">
				supplier_id,
			</if>
			<if test="fuwufanganId != null">
				fuwufangan_id,
			</if>
			<if test="financialAccountingUnit != null">
				financial_accounting_unit,
			</if>
			<if test="customerName != null">
				customer_name,
			</if>
			<if test="employeeName != null">
				employee_name,
			</if>
			<if test="certificateType != null">
				certificate_type,
			</if>
			<if test="certificateNumber != null">
				certificate_number,
			</if>
			<if test="nation != null">
				nation,
			</if>
			<if test="mobilePhone != null">
				mobile_phone,
			</if>
			<if test="isExternalCall != null">
				is_external_call,
			</if>
			<if test="householdCity != null">
				household_city,
			</if>
			<if test="householdProperty != null">
				household_property,
			</if>
			<if test="city != null">
				city,
			</if>
			<if test="socialSecurityCardNumber != null">
				social_security_card_number,
			</if>
			<if test="socialSecurityBase != null">
				social_security_base,
			</if>
			<if test="socialSecurityType != null">
				social_security_type,
			</if>
			<if test="supplier != null">
				supplier,
			</if>
			<if test="socialSecurityBeginTime != null">
				social_security_begin_time,
			</if>
			<if test="accumulationFundNumber != null">
				accumulation_fund_number,
			</if>
			<if test="accumulationFundCardinalNumber != null">
				accumulation_fund_cardinal_number,
			</if>
			<if test="accumulationFundRatio != null">
				accumulation_fund_ratio,
			</if>
			<if test="accumulationFundBeginTime != null">
				accumulation_fund_begin_time,
			</if>
			<if test="importDate != null">
				import_date,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="reportingPeriod != null">
				reporting_period,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="isExport != null">
			    is_export
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="zyId != null">
				#{zyId,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="deptId != null">
				#{deptId,jdbcType=INTEGER},
			</if>
			<if test="customerId != null">
				#{customerId,jdbcType=INTEGER},
			</if>
			<if test="supplierId != null">
				#{supplierId,jdbcType=INTEGER},
			</if>
			<if test="fuwufanganId != null">
				#{fuwufanganId,jdbcType=INTEGER},
			</if>
			<if test="financialAccountingUnit != null">
				#{financialAccountingUnit,jdbcType=VARCHAR},
			</if>
			<if test="customerName != null">
				#{customerName,jdbcType=VARCHAR},
			</if>
			<if test="employeeName != null">
				#{employeeName,jdbcType=VARCHAR},
			</if>
			<if test="certificateType != null">
				#{certificateType,jdbcType=VARCHAR},
			</if>
			<if test="certificateNumber != null">
				#{certificateNumber,jdbcType=VARCHAR},
			</if>
			<if test="nation != null">
				#{nation,jdbcType=VARCHAR},
			</if>
			<if test="mobilePhone != null">
				#{mobilePhone,jdbcType=VARCHAR},
			</if>
			<if test="isExternalCall != null">
				#{isExternalCall,jdbcType=VARCHAR},
			</if>
			<if test="householdCity != null">
				#{householdCity,jdbcType=VARCHAR},
			</if>
			<if test="householdProperty != null">
				#{householdProperty,jdbcType=VARCHAR},
			</if>
			<if test="city != null">
				#{city,jdbcType=VARCHAR},
			</if>
			<if test="socialSecurityCardNumber != null">
				#{socialSecurityCardNumber,jdbcType=VARCHAR},
			</if>
			<if test="socialSecurityBase != null">
				#{socialSecurityBase,jdbcType=VARCHAR},
			</if>
			<if test="socialSecurityType != null">
				#{socialSecurityType,jdbcType=VARCHAR},
			</if>
			<if test="supplier != null">
				#{supplier,jdbcType=VARCHAR},
			</if>
			<if test="socialSecurityBeginTime != null">
				#{socialSecurityBeginTime,jdbcType=VARCHAR},
			</if>
			<if test="accumulationFundNumber != null">
				#{accumulationFundNumber,jdbcType=VARCHAR},
			</if>
			<if test="accumulationFundCardinalNumber != null">
				#{accumulationFundCardinalNumber,jdbcType=VARCHAR},
			</if>
			<if test="accumulationFundRatio != null">
				#{accumulationFundRatio,jdbcType=VARCHAR},
			</if>
			<if test="accumulationFundBeginTime != null">
				#{accumulationFundBeginTime,jdbcType=VARCHAR},
			</if>
			<if test="importDate != null">
				#{importDate,jdbcType=TIMESTAMP},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="reportingPeriod != null">
				#{reportingPeriod,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=TINYINT},
			</if>
			<if test="isExport != null">
			    #{isExport,jdbcType=TINYINT}
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="zengyuan">
		update zengyuan
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="deptId != null">
				dept_id = #{deptId,jdbcType=INTEGER},
			</if>
			<if test="customerId != null">
				customer_id = #{customerId,jdbcType=INTEGER},
			</if>
			<if test="supplierId != null">
				supplier_id = #{supplierId,jdbcType=INTEGER},
			</if>
			<if test="fuwufanganId != null">
				fuwufangan_id = #{fuwufanganId,jdbcType=INTEGER},
			</if>
			<if test="financialAccountingUnit != null">
				financial_accounting_unit =
				#{financialAccountingUnit,jdbcType=VARCHAR},
			</if>
			<if test="customerName != null">
				customer_name = #{customerName,jdbcType=VARCHAR},
			</if>
			<if test="employeeName != null">
				employee_name = #{employeeName,jdbcType=VARCHAR},
			</if>
			<if test="certificateType != null">
				certificate_type = #{certificateType,jdbcType=VARCHAR},
			</if>
			<if test="certificateNumber != null">
				certificate_number =
				#{certificateNumber,jdbcType=VARCHAR},
			</if>
			<if test="nation != null">
				nation = #{nation,jdbcType=VARCHAR},
			</if>
			<if test="mobilePhone != null">
				mobile_phone = #{mobilePhone,jdbcType=VARCHAR},
			</if>
			<if test="isExternalCall != null">
				is_external_call = #{isExternalCall,jdbcType=VARCHAR},
			</if>
			<if test="householdCity != null">
				household_city = #{householdCity,jdbcType=VARCHAR},
			</if>
			<if test="householdProperty != null">
				household_property =
				#{householdProperty,jdbcType=VARCHAR},
			</if>
			<if test="city != null">
				city = #{city,jdbcType=VARCHAR},
			</if>
			<if test="socialSecurityCardNumber != null">
				social_security_card_number =
				#{socialSecurityCardNumber,jdbcType=VARCHAR},
			</if>
			<if test="socialSecurityBase != null">
				social_security_base =
				#{socialSecurityBase,jdbcType=VARCHAR},
			</if>
			<if test="socialSecurityType != null">
				social_security_type =
				#{socialSecurityType,jdbcType=VARCHAR},
			</if>
			<if test="supplier != null">
				supplier = #{supplier,jdbcType=VARCHAR},
			</if>
			<if test="socialSecurityBeginTime != null">
				social_security_begin_time =
				#{socialSecurityBeginTime,jdbcType=VARCHAR},
			</if>
			<if test="accumulationFundNumber != null">
				accumulation_fund_number =
				#{accumulationFundNumber,jdbcType=VARCHAR},
			</if>
			<if test="accumulationFundCardinalNumber != null">
				accumulation_fund_cardinal_number =
				#{accumulationFundCardinalNumber,jdbcType=VARCHAR},
			</if>
			<if test="accumulationFundRatio != null">
				accumulation_fund_ratio =
				#{accumulationFundRatio,jdbcType=VARCHAR},
			</if>
			<if test="accumulationFundBeginTime != null">
				accumulation_fund_begin_time =
				#{accumulationFundBeginTime,jdbcType=VARCHAR},
			</if>
			<if test="importDate != null">
				import_date = #{importDate,jdbcType=TIMESTAMP},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="reportingPeriod != null">
				reporting_period = #{reportingPeriod,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=TINYINT},
			</if>
			<if test="isExport != null">
			    is_export = #{isExport,jdbcType=TINYINT}
			</if>
		</set>
		where zy_id = #{zyId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="zengyuan">
		update zengyuan
		set user_id = #{userId,jdbcType=INTEGER},
		dept_id =
		#{deptId,jdbcType=INTEGER},
		customer_id =
		#{customerId,jdbcType=INTEGER},
		supplier_id =
		#{supplierId,jdbcType=INTEGER},
		fuwufangan_id =
		#{fuwufanganId,jdbcType=INTEGER},
		financial_accounting_unit =
		#{financialAccountingUnit,jdbcType=VARCHAR},
		customer_name =
		#{customerName,jdbcType=VARCHAR},
		employee_name =
		#{employeeName,jdbcType=VARCHAR},
		certificate_type =
		#{certificateType,jdbcType=VARCHAR},
		certificate_number =
		#{certificateNumber,jdbcType=VARCHAR},
		nation =
		#{nation,jdbcType=VARCHAR},
		mobile_phone =
		#{mobilePhone,jdbcType=VARCHAR},
		is_external_call =
		#{isExternalCall,jdbcType=VARCHAR},
		household_city =
		#{householdCity,jdbcType=VARCHAR},
		household_property =
		#{householdProperty,jdbcType=VARCHAR},
		city = #{city,jdbcType=VARCHAR},
		social_security_card_number =
		#{socialSecurityCardNumber,jdbcType=VARCHAR},
		social_security_base =
		#{socialSecurityBase,jdbcType=VARCHAR},
		social_security_type =
		#{socialSecurityType,jdbcType=VARCHAR},
		supplier =
		#{supplier,jdbcType=VARCHAR},
		social_security_begin_time =
		#{socialSecurityBeginTime,jdbcType=VARCHAR},
		accumulation_fund_number =
		#{accumulationFundNumber,jdbcType=VARCHAR},
		accumulation_fund_cardinal_number =
		#{accumulationFundCardinalNumber,jdbcType=VARCHAR},
		accumulation_fund_ratio = #{accumulationFundRatio,jdbcType=VARCHAR},
		accumulation_fund_begin_time =
		#{accumulationFundBeginTime,jdbcType=VARCHAR},
		import_date =
		#{importDate,jdbcType=TIMESTAMP},
		remark = #{remark,jdbcType=VARCHAR},
		reporting_period = #{reportingPeriod,jdbcType=VARCHAR},
		status =
		#{status,jdbcType=TINYINT},
		is_export = #{isExport,jdbcType=TINYINT}
		where zy_id = #{zyId,jdbcType=INTEGER}
	</update>

	<!-- 查询增员员工当月某城市增员信息是否存在 -->
	<select id="selectIsExistsByCertificateNumber" resultType="hashmap">
		select zy_id from zengyuan where city = #{city} and reporting_period =
		#{reportingPeriod} and certificate_number = #{certificateNumber}
	</select>

	<!-- 修改员工状态为确定增员 -->
	<update id="updateStatusToConfirm">
		update zengyuan set status = 1 where import_date =
		(select operation_time
		from operation_record where user_id = #{userId}
		and or_id =
		#{operationRecordId})
	</update>

	<!-- 修改增员用户服务方案信息 -->
	<update id="updateFuwufanganMsg">
		update zengyuan set supplier_id =
		#{supplierId},fuwufangan_id =
		#{fuwufanganId} where reporting_period =
		#{reportingPeriod} and city =
		#{city} and certificate_number =
		#{certificateNumber}
	</update>

	<resultMap id="BasePoResultMap" type="com.dianmi.model.po.ZengyuanPo">
		<id column="zy_id" property="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
		<result column="supplier_id" property="supplierId" jdbcType="INTEGER"
			javaType="java.lang.Integer" />
		<result column="operator" property="operator" jdbcType="VARCHAR"
			javaType="java.lang.String" />
		<result column="customer_tag" property="customerTag" jdbcType="VARCHAR"
			javaType="java.lang.String" />
		<result column="supplier_name" property="supplierName"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="fuwufangan_name" property="fuwufanganName"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="financial_accounting_unit" property="financialAccountingUnit"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="customer_name" property="customerName"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="employee_name" property="employeeName"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="certificate_type" property="certificateType"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="certificate_number" property="certificateNumber"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="nation" property="nation" jdbcType="VARCHAR"
			javaType="java.lang.String" />
		<result column="mobile_phone" property="mobilePhone" jdbcType="VARCHAR"
			javaType="java.lang.String" />
		<result column="is_external_call" property="isExternalCall"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="household_city" property="householdCity"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="household_property" property="householdProperty"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="city" property="city" jdbcType="VARCHAR"
			javaType="java.lang.String" />
		<result column="social_security_card_number" property="socialSecurityCardNumber"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="social_security_base" property="socialSecurityBase"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="social_security_type" property="socialSecurityType"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="supplier" property="supplier" jdbcType="VARCHAR"
			javaType="java.lang.String" />
		<result column="social_security_begin_time" property="socialSecurityBeginTime"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="accumulation_fund_number" property="accumulationFundNumber"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="accumulation_fund_cardinal_number" property="accumulationFundCardinalNumber"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="accumulation_fund_ratio" property="accumulationFundRatio"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="accumulation_fund_begin_time" property="accumulationFundBeginTime"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="import_date" property="importDate" jdbcType="TIMESTAMP"
			javaType="java.util.Date" />
		<result column="remark" property="remark" jdbcType="VARCHAR"
			javaType="java.lang.String" />
		<result column="reporting_period" property="reportingPeriod"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="status" property="status" jdbcType="TINYINT"
			javaType="java.lang.Byte" />
	</resultMap>

	<!-- 增员信息分页 -->
	<select id="zengyuanPaging" resultMap="BasePoResultMap">
		select
		zy.zy_id,
		zy.supplier_id,
		u.name operator,
		c.customer_name
		customer_tag,
		s.supplier_name,
		f.product_name,
		zy.financial_accounting_unit,
		zy.customer_name,
		zy.employee_name,
		zy.certificate_type,
		zy.certificate_number,
		zy.nation,
		zy.mobile_phone,
		zy.is_external_call,
		zy.household_city,
		zy.household_property,
		zy.city,
		zy.social_security_card_number,
		zy.social_security_base,
		zy.social_security_type,
		zy.supplier,
		zy.social_security_begin_time,
		zy.accumulation_fund_number,
		zy.accumulation_fund_cardinal_number,
		zy.accumulation_fund_ratio,
		zy.accumulation_fund_begin_time,
		zy.import_date,
		zy.remark,
		zy.reporting_period,
		zy.status
		from
		user u,
		zengyuan zy,
		customer c,
		supplier s,
		fuwufangan f
		where
		zy.reporting_period = #{reportingPeriod}
		<if test="paramName != null">
			and zy.customer_name like #{paramName}
		</if>
		and
		zy.supplier_id = #{supplierId}
		and
		zy.customer_id = c.c_id
		and
		zy.user_id = u.u_id
		and
		zy.fuwufangan_id = f.fw_id
		and
		zy.supplier_id =
		s.s_id
		order by zy.status
	</select>

	<resultMap id="supplierResultMap" type="com.dianmi.model.po.ZengyuanSupplier">
		<id column="supplier_id" property="supplierId" jdbcType="INTEGER"
			javaType="java.lang.Integer" />
		<result column="supplier_name" property="supplierName"
			jdbcType="VARCHAR" javaType="java.lang.String" />
	</resultMap>

	<!-- 获取供应商当月增员总人数 -->
	<select id="countZengyuanTotal" resultType="java.lang.Integer">
		select
		count(zy_id)
		from zengyuan zy,supplier s
		where
		zy.supplier_id =
		s.s_id
		and
		zy.reporting_period = #{reportingPeriod}
		and
		zy.supplier_id =
		#{supplierId}
	</select>

	<resultMap id="zengyuanResultMap" type="com.dianmi.model.po.ZengyuanPo">
		<id column="zy_id" property="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
		<result column="financial_accounting_unit" property="financialAccountingUnit"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="customer_name" property="customerName"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="employee_name" property="employeeName"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="certificate_type" property="certificateType"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="certificate_number" property="certificateNumber"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="nation" property="nation" jdbcType="VARCHAR"
			javaType="java.lang.String" />
		<result column="mobile_phone" property="mobilePhone" jdbcType="VARCHAR"
			javaType="java.lang.String" />
		<result column="is_external_call" property="isExternalCall"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="household_city" property="householdCity"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="household_property" property="householdProperty"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="city" property="city" jdbcType="VARCHAR"
			javaType="java.lang.String" />
		<result column="social_security_card_number" property="socialSecurityCardNumber"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="social_security_base" property="socialSecurityBase"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="social_security_type" property="socialSecurityType"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="supplier" property="supplier" jdbcType="VARCHAR"
			javaType="java.lang.String" />
		<result column="social_security_begin_time" property="socialSecurityBeginTime"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="accumulation_fund_number" property="accumulationFundNumber"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="accumulation_fund_cardinal_number" property="accumulationFundCardinalNumber"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="accumulation_fund_ratio" property="accumulationFundRatio"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="accumulation_fund_begin_time" property="accumulationFundBeginTime"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="reporting_period" property="reportingPeriod"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="remark" property="remark" jdbcType="VARCHAR"
			javaType="java.lang.String" />
	</resultMap>

	<!-- 获取根据供应商id获取当月增员数据信息(staus为0才可发送给供应商) -->
	<select id="selectBySupplierMsg" resultMap="zengyuanResultMap">
		select
		zy_id,
		financial_accounting_unit,
		customer_name,
		employee_name,
		certificate_type,
		certificate_number,
		nation,
		mobile_phone,
		is_external_call,
		household_city,
		household_property, city,
		social_security_card_number,
		social_security_base,
		social_security_type,
		supplier,
		social_security_begin_time,
		accumulation_fund_number,
		accumulation_fund_cardinal_number,
		accumulation_fund_ratio,
		accumulation_fund_begin_time,
		reporting_period,
		remark
		from
		zengyuan
		where reporting_period =
		#{reportingPeriod} and
		supplier_id =
		#{supplierId}
		and status = 0
	</select>

	<update id="updateAddSocialStatus" parameterType="java.lang.String">
		update zengyuan
		set status=0 where certificate_number=#{certificateNumber} and
		reporting_period = #{reportingPeriod} and city=#{city}
	</update>


	<!-- 发送邮件后修改增员信息状态 -->
	<update id="updateStatus" parameterType="java.lang.Integer">
		update zengyuan set
		status = 1 where zy_id = #{zyId};
	</update>

	<!-- 修改状态为增员成功 -->
	<update id="updateAddStatus">
		update zengyuan set status = 2
		where
		certificate_number = #{certificateNumber} and city = #{city}
		and
		reporting_period = #{reportingPeriod}
	</update>

	<!-- 删除待定状态的增员用户信息 -->
	<delete id="deleteById" parameterType="int">
		delete
		from
		zengyuan
		where
		status = 0
		and zy_id = #{zyId}
	</delete>

	<!-- 获取供应商未发送邮件增员员工总人数 -->
	<select id="amount" resultType="int">
		select
		count(zy_id)
		from zengyuan
		where
		reporting_period = #{yearMonth}
		and
		supplier_id = #{supplierId}
		<if test="type == 1">
			and
			status = 0
		</if>
		<if test="type == 2">
			and
			status = 1
		</if>
	</select>

	<!-- 按供应商获取增员信息 -->
	<select id="selectBySupplierId" resultMap="zengyuanResultMap">
		select
		zy_id,
		financial_accounting_unit,
		customer_name,
		employee_name,
		certificate_type,
		certificate_number,
		nation,
		mobile_phone,
		is_external_call,
		household_city,
		household_property, city,
		social_security_card_number,
		social_security_base,
		social_security_type,
		supplier,
		social_security_begin_time,
		accumulation_fund_number,
		accumulation_fund_cardinal_number,
		accumulation_fund_ratio,
		accumulation_fund_begin_time,
		remark
		from
		zengyuan where reporting_period = #{reportingPeriod} and
		supplier_id =
		#{supplierId}
	</select>

	<!-- 用户所有已发未发邮件总数量 -->
	<select id="emailAmount" resultType="int">
		SELECT
		count(zy_id)
		FROM
		zengyuan
		WHERE
		reporting_period = #{yearMonth}
		<choose>
			<when test="type == 1">
				AND
				status = 0
			</when>
			<when test="type == 2">
				AND
				status = 1
			</when>
		</choose>
		<if test="roleType == 2">
			AND
			supplier_id in(select s_id from supplier where user_id
			= #{userId})
		</if>
		AND
		supplier_id &lt;&gt; 1
	</select>

	<!-- 当前用户所有增员人员数量 -->
	<select id="zengyuanAmount" resultType="int">
		SELECT
		count(zy_id)
		FROM
		zengyuan
		WHERE
		reporting_period = #{yearMonth}
		<if test="roleType == 2">
			AND
			supplier_id in(select s_id from supplier where user_id
			= #{userId})
		</if>
		AND
		supplier_id &lt;&gt; 1
	</select>

	<!-- 增员未匹配供应商人数 -->
	<select id="notMatchSupplierAmount" resultType="int">
		SELECT
		count(zy_id)
		FROM
		zengyuan
		WHERE
		reporting_period = #{yearMonth}
		AND
		supplier_id = 1
	</select>

	<!-- 获取用户增减员信息下的所有城市 -->
	<select id="allCity" resultType="map">
		SELECT
		DISTINCT
		city
		FROM
		zaice
		WHERE
		reporting_period = #{yearMonth}
		AND
		status in(1,2)
		AND
		delete_flag = 0
		<if test="roleType==2">
			AND
			supplier_id IN(SELECT s_id FROM supplier WHERE user_id
			= #{userId})
		</if>
	</select>

	<!-- 根据城市信息获取用户所有增员信息 -->
	<select id="selectByCity" resultMap="BasePoResultMap">
		select
		zy.zy_id,
		zy.supplier_id,
		u.name operator,
		c.customer_name
		customer_tag,
		s.supplier_name,
		f.product_name,
		zy.financial_accounting_unit,
		zy.customer_name,
		zy.employee_name,
		zy.certificate_type,
		zy.certificate_number,
		zy.nation,
		zy.mobile_phone,
		zy.is_external_call,
		zy.household_city,
		zy.household_property,
		zy.city,
		zy.social_security_card_number,
		zy.social_security_base,
		zy.social_security_type,
		zy.supplier,
		zy.social_security_begin_time,
		zy.accumulation_fund_number,
		zy.accumulation_fund_cardinal_number,
		zy.accumulation_fund_ratio,
		zy.accumulation_fund_begin_time,
		zy.import_date,
		zy.remark,
		zy.reporting_period,
		zy.status
		from
		user u,
		zengyuan zy,
		customer c,
		supplier s,
		fuwufangan f
		where
		zy.reporting_period = #{yearMonth}
		and
		zy.city = #{city}
		and
		zy.customer_id = c.c_id
		and
		zy.user_id = u.u_id
		and
		zy.fuwufangan_id =
		f.fw_id
		and
		zy.supplier_id =
		s.s_id
		<if test="roleType == 2">
			and
			zy.supplier_id in(select s_id from supplier where
			user_id = #{userId})
		</if>
		order by zy.status
	</select>

	<!-- 增减员所有部门 -->
	<select id="allDept" resultType="map">
		select
		kd_id,dept_name
		from kefu_dept
		where
		kd_id in(
		select
		dept_id
		from
		zaice
		where
		reporting_period = #{yearMonth}
		AND
		status in(1,2)
		AND
		delete_flag = 0
		<if test="roleType==2">
			and
			supplier_id
			in(
			select
			s_id
			from
			supplier
			where
			user_id =
			#{userId})
			)
		</if>
	</select>

	<!-- 按部门获取增员用户信息 -->
	<select id="selectByDept" resultMap="BasePoResultMap">
		select
		zy.zy_id,
		zy.supplier_id,
		u.name operator,
		c.customer_name
		customer_tag,
		s.supplier_name,
		f.product_name,
		zy.financial_accounting_unit,
		zy.customer_name,
		zy.employee_name,
		zy.certificate_type,
		zy.certificate_number,
		zy.nation,
		zy.mobile_phone,
		zy.is_external_call,
		zy.household_city,
		zy.household_property,
		zy.city,
		zy.social_security_card_number,
		zy.social_security_base,
		zy.social_security_type,
		zy.supplier,
		zy.social_security_begin_time,
		zy.accumulation_fund_number,
		zy.accumulation_fund_cardinal_number,
		zy.accumulation_fund_ratio,
		zy.accumulation_fund_begin_time,
		zy.import_date,
		zy.remark,
		zy.reporting_period,
		zy.status
		from
		user u,
		zengyuan zy,
		customer c,
		supplier s,
		fuwufangan f
		where
		zy.reporting_period = #{yearMonth}
		and
		zy.customer_id = c.c_id
		and
		zy.user_id = u.u_id
		and
		zy.fuwufangan_id = f.fw_id
		and
		zy.supplier_id =
		s.s_id
		and
		zy.dept_id in(select kd_id from
		kefu_dept where dept_name =
		#{deptName})
		<if test="roleType == 2">
			and zy.supplier_id in(select s_id from supplier where
			user_id = #{userId})
		</if>
		order by zy.status
	</select>

	<!-- 修改状态为增员失败 -->
	<update id="zengyuanFaild">
		update
		zengyuan
		set
		status = 3
		where
		reporting_period = #{yearMonth}
		and
		city = #{city}
		and
		certificate_number = #{certificateNumber}
	</update>

	<!-- 用户未处理已处理增员 -->
	<select id="isSendEmailZengyuan" resultMap="BasePoResultMap">
		select
		zy.zy_id,
		zy.supplier_id,
		u.name operator,
		c.customer_name
		customer_tag,
		s.supplier_name,
		f.product_name,
		zy.financial_accounting_unit,
		zy.customer_name,
		zy.employee_name,
		zy.certificate_type,
		zy.certificate_number,
		zy.nation,
		zy.mobile_phone,
		zy.is_external_call,
		zy.household_city,
		zy.household_property,
		zy.city,
		zy.social_security_card_number,
		zy.social_security_base,
		zy.social_security_type,
		zy.supplier,
		zy.social_security_begin_time,
		zy.accumulation_fund_number,
		zy.accumulation_fund_cardinal_number,
		zy.accumulation_fund_ratio,
		zy.accumulation_fund_begin_time,
		zy.import_date,
		zy.remark,
		zy.reporting_period,
		zy.status
		from
		user u,
		zengyuan zy,
		customer c,
		supplier s,
		fuwufangan f
		where
		zy.reporting_period = #{yearMonth}
		and
		zy.customer_id = c.c_id
		and
		zy.user_id = u.u_id
		and
		zy.fuwufangan_id = f.fw_id
		and
		zy.supplier_id =
		s.s_id
		<choose>
		<when test="isSendEmail==0">
		and
		zy.status = 0
		</when>
		<when test="isSendEmail==1">
		and
		zy.status = 1
		</when>
		</choose>
		<if test="roleType == 2">
			and zy.supplier_id in(select s_id from supplier where
			user_id = #{userId})
		</if>
		order by zy.status
	</select>
	
	<!-- 未找到服务方案增员 -->
	<select id="noSupplierZengyuan" resultMap="BasePoResultMap">
		select
		zy.zy_id,
		zy.supplier_id,
		u.name operator,
		c.customer_name
		customer_tag,
		s.supplier_name,
		f.product_name,
		zy.financial_accounting_unit,
		zy.customer_name,
		zy.employee_name,
		zy.certificate_type,
		zy.certificate_number,
		zy.nation,
		zy.mobile_phone,
		zy.is_external_call,
		zy.household_city,
		zy.household_property,
		zy.city,
		zy.social_security_card_number,
		zy.social_security_base,
		zy.social_security_type,
		zy.supplier,
		zy.social_security_begin_time,
		zy.accumulation_fund_number,
		zy.accumulation_fund_cardinal_number,
		zy.accumulation_fund_ratio,
		zy.accumulation_fund_begin_time,
		zy.import_date,
		zy.remark,
		zy.reporting_period,
		zy.status
		from
		user u,
		zengyuan zy,
		customer c,
		supplier s,
		fuwufangan f
		where
		zy.reporting_period = #{yearMonth}
		and
		zy.customer_id = c.c_id
		and
		zy.user_id = u.u_id
		and
		zy.fuwufangan_id = f.fw_id
		and
		zy.supplier_id =
		s.s_id
		and
		zy.supplier_id = 1
	</select>
	
	<!-- 根据供应商id获取供應商某月份所有身份證號碼-->
	<select id="getAllCertificateNumber" resultType="string">
	    SELECT
	    certificate_number
	    FROM
	    zengyuan
	    WHERE
	    reporting_period = #{yearMonth}
	    AND
	    supplier_id = #{supplierId}
	</select>
	
	<!-- 根据城市获取所有增员信息 -->
	<select id="getAllByCity" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM
        zengyuan
        WHERE
        reporting_period = #{yearMonth}
        AND
        city = #{city}
        <if test="type == 1">
        AND
        is_export = 0
        </if>
    </select>
    
    <!-- 修改导出状态 -->
    <update id="updateExportStatus">
        UPDATE
        zengyuan
        SET
        is_export = 1
        WHERE
        zy_id = #{zyId}
    </update>
</mapper>