<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dianmi.mapper.JianyuanMapper">
	<resultMap id="BaseResultMap" type="jianyuan">
		<constructor>
			<idArg column="jy_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
			<arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
			<arg column="dept_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
			<arg column="customer_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
			<arg column="client_name" jdbcType="VARCHAR" javaType="java.lang.String" />
			<arg column="employee_name" jdbcType="VARCHAR" javaType="java.lang.String" />
			<arg column="certificate_type" jdbcType="VARCHAR" javaType="java.lang.String" />
			<arg column="certificate_number" jdbcType="VARCHAR" javaType="java.lang.String" />
			<arg column="city" jdbcType="VARCHAR" javaType="java.lang.String" />
			<arg column="dimission_reason" jdbcType="VARCHAR" javaType="java.lang.String" />
			<arg column="dimission_date" jdbcType="VARCHAR" javaType="java.lang.String" />
			<arg column="social_security_stop_date" jdbcType="VARCHAR"
				javaType="java.lang.String" />
			<arg column="accumulation_fund_stop_date" jdbcType="VARCHAR"
				javaType="java.lang.String" />
			<arg column="supplier" jdbcType="VARCHAR" javaType="java.lang.String" />
			<arg column="remark" jdbcType="VARCHAR" javaType="java.lang.String" />
			<arg column="import_date" jdbcType="TIMESTAMP" javaType="java.util.Date" />
			<arg column="reporting_period" jdbcType="VARCHAR" javaType="java.lang.String" />
			<arg column="status" jdbcType="TINYINT" javaType="java.lang.Byte" />
			<arg column="send_email_date" jdbcType="TIMESTAMP" javaType="java.util.Date" />
			<arg column="is_export" jdbcType="TINYINT" javaType="java.lang.Byte" />
		</constructor>
	</resultMap>
	<sql id="Base_Column_List">
		jy_id, user_id, dept_id,customer_id, client_name,
		employee_name,
		certificate_type,
		certificate_number,
		city,
		dimission_reason,
		dimission_date, social_security_stop_date,
		accumulation_fund_stop_date,
		supplier, remark, import_date,
		reporting_period, status,send_email_date,is_export
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from jianyuan
		where jy_id = #{jyId,jdbcType=INTEGER}
	</select>

	<select id="selectMinusEmployeeName" resultType="java.lang.String">
		select
		employee_name from jianyuan where city=#{city} and supplier IN (select
		supplier from zaice where supplier_id=#{supplierId})
		and
		reporting_period=#{reportingPeriod} and
		certificate_number=#{certificateNumber} and status=1
	</select>

	<select id="selectJianyuanAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from jianyuan group by city order by jy_id
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		jianyuan
		where jy_id = #{jyId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="jianyuan">
		insert into jianyuan (jy_id,
		user_id, dept_id,customer_id,
		client_name, employee_name,
		certificate_type,
		certificate_number, city, dimission_reason,
		dimission_date,
		social_security_stop_date,
		accumulation_fund_stop_date,
		supplier,
		remark,
		import_date, reporting_period, status,is_export
		)
		values
		(#{jyId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER},
		#{deptId,jdbcType=INTEGER},
		#{customerId,jdbcType=INTEGER},
		#{clientName,jdbcType=VARCHAR},
		#{employeeName,jdbcType=VARCHAR},
		#{certificateType,jdbcType=VARCHAR},
		#{certificateNumber,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR},
		#{dimissionReason,jdbcType=VARCHAR},
		#{dimissionDate,jdbcType=VARCHAR},
		#{socialSecurityStopDate,jdbcType=VARCHAR},
		#{accumulationFundStopDate,jdbcType=VARCHAR},
		#{supplier,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR},
		#{importDate,jdbcType=TIMESTAMP}, #{reportingPeriod,jdbcType=VARCHAR},
		#{status,jdbcType=TINYINT},#{isExport,jdbcType=TINYINT}
		)
	</insert>
	<insert id="insertSelective" parameterType="jianyuan">
		insert into jianyuan
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="jyId != null">
				jy_id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="deptId != null">
				dept_id,
			</if>
			<if test="customerId != null">
				customer_id,
			</if>
			<if test="clientName != null">
				client_name,
			</if>
			<if test="employeeName != null">
				employee_name,
			</if>
			<if test="certificateType != null">
				certificate_type,
			</if>
			<if test="certificateNumber != null">
				certificate_number,
			</if>
			<if test="city != null">
				city,
			</if>
			<if test="dimissionReason != null">
				dimission_reason,
			</if>
			<if test="dimissionDate != null">
				dimission_date,
			</if>
			<if test="socialSecurityStopDate != null">
				social_security_stop_date,
			</if>
			<if test="accumulationFundStopDate != null">
				accumulation_fund_stop_date,
			</if>
			<if test="supplier != null">
				supplier,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="importDate != null">
				import_date,
			</if>
			<if test="reportingPeriod != null">
				reporting_period,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="isExport != null">
				is_export
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="jyId != null">
				#{jyId,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="deptId != null">
				#{deptId,jdbcType=INTEGER},
			</if>
			<if test="customerId != null">
				#{customerId,jdbcType=INTEGER},
			</if>
			<if test="clientName != null">
				#{clientName,jdbcType=VARCHAR},
			</if>
			<if test="employeeName != null">
				#{employeeName,jdbcType=VARCHAR},
			</if>
			<if test="certificateType != null">
				#{certificateType,jdbcType=VARCHAR},
			</if>
			<if test="certificateNumber != null">
				#{certificateNumber,jdbcType=VARCHAR},
			</if>
			<if test="city != null">
				#{city,jdbcType=VARCHAR},
			</if>
			<if test="dimissionReason != null">
				#{dimissionReason,jdbcType=VARCHAR},
			</if>
			<if test="dimissionDate != null">
				#{dimissionDate,jdbcType=VARCHAR},
			</if>
			<if test="socialSecurityStopDate != null">
				#{socialSecurityStopDate,jdbcType=VARCHAR},
			</if>
			<if test="accumulationFundStopDate != null">
				#{accumulationFundStopDate,jdbcType=VARCHAR},
			</if>
			<if test="supplier != null">
				#{supplier,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="importDate != null">
				#{importDate,jdbcType=TIMESTAMP},
			</if>
			<if test="reportingPeriod != null">
				#{reportingPeriod,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=TINYINT},
			</if>
			<if test="isExport != null">
				#{isExport,jdbcType=TINYINT}
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="jianyuan">
		update jianyuan
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="deptId != null">
				dept_id = #{deptId,jdbcType=INTEGER},
			</if>
			<if test="customerId != null">
				customer_id = #{customerId,jdbcType=INTEGER},
			</if>
			<if test="clientName != null">
				client_name = #{clientName,jdbcType=VARCHAR},
			</if>
			<if test="employeeName != null">
				employee_name = #{employeeName,jdbcType=VARCHAR},
			</if>
			<if test="certificateType != null">
				certificate_type = #{certificateType,jdbcType=VARCHAR},
			</if>
			<if test="certificateNumber != null">
				certificate_number =
				#{certificateNumber,jdbcType=VARCHAR},
			</if>
			<if test="city != null">
				city = #{city,jdbcType=VARCHAR},
			</if>
			<if test="dimissionReason != null">
				dimission_reason = #{dimissionReason,jdbcType=VARCHAR},
			</if>
			<if test="dimissionDate != null">
				dimission_date = #{dimissionDate,jdbcType=VARCHAR},
			</if>
			<if test="socialSecurityStopDate != null">
				social_security_stop_date =
				#{socialSecurityStopDate,jdbcType=VARCHAR},
			</if>
			<if test="accumulationFundStopDate != null">
				accumulation_fund_stop_date =
				#{accumulationFundStopDate,jdbcType=VARCHAR},
			</if>
			<if test="supplier != null">
				supplier = #{supplier,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="importDate != null">
				import_date = #{importDate,jdbcType=TIMESTAMP},
			</if>
			<if test="reportingPeriod != null">
				reporting_period = #{reportingPeriod,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=TINYINT},
			</if>
			<if test="isExport != null">
				is_export = #{isExport,jdbcType=TINYINT}
			</if>
		</set>
		where jy_id = #{jyId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="jianyuan">
		update jianyuan
		set user_id = #{userId,jdbcType=INTEGER},
		customer_id =
		#{customerId,jdbcType=INTEGER},
		dept_id =
		#{deptId,jdbcType=INTEGER},
		client_name =
		#{clientName,jdbcType=VARCHAR},
		employee_name =
		#{employeeName,jdbcType=VARCHAR},
		certificate_type =
		#{certificateType,jdbcType=VARCHAR},
		certificate_number =
		#{certificateNumber,jdbcType=VARCHAR},
		city = #{city,jdbcType=VARCHAR},
		dimission_reason = #{dimissionReason,jdbcType=VARCHAR},
		dimission_date
		= #{dimissionDate,jdbcType=VARCHAR},
		social_security_stop_date =
		#{socialSecurityStopDate,jdbcType=VARCHAR},
		accumulation_fund_stop_date =
		#{accumulationFundStopDate,jdbcType=VARCHAR},
		supplier =
		#{supplier,jdbcType=VARCHAR},
		remark = #{remark,jdbcType=VARCHAR},
		import_date = #{importDate,jdbcType=TIMESTAMP},
		reporting_period =
		#{reportingPeriod,jdbcType=VARCHAR},
		status =
		#{status,jdbcType=TINYINT},
		is_export = #{isExport,jdbcType=TINYINT}
		where jy_id = #{jyId,jdbcType=INTEGER}
	</update>

	<select id="isExistsByCertificateNumber" resultType="hashmap">
		select jy_id
		from jianyuan where city = #{city} and reporting_period =
		#{reportingPeriod} and certificate_number = #{certificateNumber}
	</select>

	<update id="updateStatusToConfirm">
		update jianyuan set status = 1 where import_date =
		(select operation_time
		from operation_record where user_id = #{userId}
		and or_id =
		#{operationRecordId});
	</update>

	<resultMap id="BasePoResultMap" type="com.dianmi.model.po.JianyuanPo">
		<id column="jy_id" property="jyId" jdbcType="INTEGER" javaType="java.lang.Integer" />
		<result column="customer_tag" property="customerTag" jdbcType="VARCHAR"
			javaType="java.lang.String" />
		<result column="client_name" property="clientName" jdbcType="VARCHAR"
			javaType="java.lang.String" />
		<result column="employee_name" property="employeeName"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="certificate_type" property="certificateType"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="certificate_number" property="certificateNumber"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="city" property="city" jdbcType="VARCHAR"
			javaType="java.lang.String" />
		<result column="dimission_reason" property="dimissionReason"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="dimission_date" property="dimissionDate"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="social_security_stop_date" property="socialSecurityStopDate"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="accumulation_fund_stop_date" property="accumulationFundStopDate"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="supplier" property="supplier" jdbcType="VARCHAR"
			javaType="java.lang.String" />
		<result column="remark" property="remark" jdbcType="VARCHAR"
			javaType="java.lang.String" />
		<result column="import_date" property="importDate" jdbcType="TIMESTAMP"
			javaType="java.util.Date" />
		<result column="reporting_period" property="reportingPeriod"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="status" property="status" jdbcType="TINYINT"
			javaType="java.lang.Byte" />
	</resultMap>

	<select id="selectPaging" resultMap="BasePoResultMap">
		select jy.jy_id,
		c.customer_name customer_tag,
		jy.client_name,
		jy.employee_name,
		jy.certificate_type,
		jy.certificate_number,
		jy.city,
		jy.dimission_reason,
		jy.dimission_date,
		jy.social_security_stop_date,
		jy.accumulation_fund_stop_date,
		jy.supplier,
		jy.remark,
		jy.import_date,
		jy.reporting_period,
		jy.status
		from jianyuan jy,customer c,zaice
		zc,supplier s
		where
		jy.reporting_period = #{reportingPeriod}
		<if test="paramName != null">
			<!-- and c.customer_name like #{paramName} -->
			and jy.client_name like #{paramName}
		</if>
		and
		zc.supplier_id = #{supplierId}
		and
		jy.customer_id = c.c_id
		and
		jy.certificate_number =
		zc.certificate_number
		and
		jy.reporting_period =
		zc.reporting_period
		and
		zc.supplier_id = s.s_id
		and
		zc.city = jy.city
		order by jy.status
	</select>


	<select id="countJianyuanTotal" resultType="java.lang.Integer">
		select
		count(jy.jy_id)
		from jianyuan jy,zaice zc
		where
		jy.reporting_period =
		#{reportingPeriod}
		and
		zc.supplier_id = #{supplierId}
		and
		jy.certificate_number = zc.certificate_number
		and
		jy.reporting_period =
		zc.reporting_period
		and
		zc.city = jy.city
	</select>

	<resultMap id="JianyuanResultMap" type="com.dianmi.model.po.JianyuanPo">
		<id column="jy_id" property="jyId" jdbcType="INTEGER" javaType="java.lang.Integer" />
		<result column="client_name" property="clientName" jdbcType="VARCHAR"
			javaType="java.lang.String" />
		<result column="employee_name" property="employeeName"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="certificate_type" property="certificateType"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="certificate_number" property="certificateNumber"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="city" property="city" jdbcType="VARCHAR"
			javaType="java.lang.String" />
		<result column="dimission_reason" property="dimissionReason"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="dimission_date" property="dimissionDate"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="social_security_stop_date" property="socialSecurityStopDate"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="accumulation_fund_stop_date" property="accumulationFundStopDate"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="supplier" property="supplier" jdbcType="VARCHAR"
			javaType="java.lang.String" />
		<result column="reporting_period" property="reportingPeriod"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="remark" property="remark" jdbcType="VARCHAR"
			javaType="java.lang.String" />
	</resultMap>

	<!-- 获取根据供应商id获取当月减员数据信息(staus为0才可发送给供应商) -->
	<select id="selectBySupplierMsg" resultMap="JianyuanResultMap">
		select
		jy.jy_id,
		jy.client_name,
		jy.employee_name,
		jy.certificate_type,
		jy.certificate_number,
		jy.city,
		jy.dimission_reason,
		jy.dimission_date,
		jy.social_security_stop_date,
		jy.accumulation_fund_stop_date,
		jy.supplier,
		jy.reporting_period,
		jy.remark
		from jianyuan jy,zaice zc
		where
		jy.certificate_number = zc.certificate_number
		and
		jy.city = zc.city
		and
		jy.reporting_period = zc.reporting_period
		and
		jy.reporting_period =
		#{reportingPeriod}
		and
		zc.supplier_id =
		#{supplierId}
		and
		jy.status = 0
	</select>


	<update id="updateMinusStatus">
		update jianyuan set status=0 where
		certificate_number=#{certificateNumber}
		and reporting_period
		=#{reportingPeriod} and city=#{city}
	</update>


	<update id="updateStatus" parameterType="java.lang.Integer">
		update jianyuan set
		status = 1 where jy_id = #{jyId}
	</update>

	<update id="updateMinusSocialStatus">
		update jianyuan set status = 2
		where
		certificate_number = #{certificateNumber}
		and city = #{city} and
		reporting_period =#{reportingPeriod}
	</update>

	<delete id="deleteById" parameterType="int">
		delete
		from jianyuan
		where
		status = 0
		and jy_id = #{jyId}
	</delete>

	<!-- 未发送邮件减员数据 -->
	<select id="amount" resultType="int">
		select
		count(jy_id)
		from
		jianyuan jy,zaice zc
		where
		jy.city = zc.city
		and
		jy.reporting_period
		= zc.reporting_period
		and jy.certificate_number
		=zc.certificate_number
		and jy.reporting_period = #{yearMonth}
		and
		zc.supplier_id =
		#{supplierId}
		<if test="type == 1">
			and
			jy.status = 0
		</if>
		<if test="type == 2">
			and
			jy.status =1
		</if>
	</select>

	<!-- 按供应商获取减员数据 -->
	<select id="selectBySupplierId" resultMap="JianyuanResultMap">
		select
		jy.jy_id,
		jy.client_name,
		jy.employee_name,
		jy.certificate_type,
		jy.certificate_number,
		jy.city,
		jy.dimission_reason,
		jy.dimission_date,
		jy.social_security_stop_date,
		jy.accumulation_fund_stop_date,
		jy.supplier,
		jy.remark
		from jianyuan jy,zaice zc
		where
		jy.certificate_number = zc.certificate_number
		and
		jy.city = zc.city
		and
		jy.reporting_period = zc.reporting_period
		and
		jy.reporting_period =
		#{reportingPeriod}
		and
		zc.supplier_id =
		#{supplierId}
	</select>

	<!-- 用户减员邮件已发未发总数 -->
	<select id="emailAmount" resultType="int">
		SELECT
		count(jy_id)
		FROM
		jianyuan jy,zaice zc
		WHERE
		jy.reporting_period =
		#{yearMonth}
		AND
		jy.reporting_period = zc.reporting_period
		AND
		jy.certificate_number = zc.certificate_number
		AND
		jy.city = zc.city
		<choose>
			<when test="type==1">
				AND
				jy.status = 0
			</when>
			<when test="type==2">
				AND
				jy.status = 1
			</when>
		</choose>
		<if test="roleType == 2">
			AND
			supplier_id in(select s_id from supplier where user_id
			= #{userId})
		</if>
		AND
		supplier_id &lt;&gt; 1
	</select>

	<!-- 用户所有减员数量 -->
	<select id="jianyuanAmount" resultType="int">
		SELECT
		count(jy_id)
		FROM
		jianyuan jy,zaice zc
		WHERE
		jy.reporting_period =
		#{yearMonth}
		AND
		jy.reporting_period = zc.reporting_period
		AND
		jy.certificate_number = zc.certificate_number
		AND
		jy.city = zc.city
		<if test="roleType == 2">
			AND
			supplier_id in(select s_id from supplier where user_id
			= #{userId})
		</if>
		AND
		supplier_id &lt;&gt; 1
	</select>

	<!-- 修改状态为减员失败 -->
	<update id="jianyuanFaild">
		update
		jianyuan
		set
		status = 3
		where
		reporting_period =
		#{yearMonth}
		and
		city = #{city}
		and
		certificate_number =
		#{certificateNumber}
	</update>

	<!-- 未处理已处理减员 -->
	<select id="isSendEmailJianyuan" resultMap="BasePoResultMap">
		select jy.jy_id,
		c.customer_name customer_tag,
		jy.client_name,
		jy.employee_name,
		jy.certificate_type,
		jy.certificate_number,
		jy.city,
		jy.dimission_reason,
		jy.dimission_date,
		jy.social_security_stop_date,
		jy.accumulation_fund_stop_date,
		jy.supplier,
		jy.remark,
		jy.import_date,
		jy.reporting_period,
		jy.status
		from jianyuan jy,customer c,zaice
		zc,supplier s
		where
		jy.reporting_period = #{yearMonth}
		and
		jy.customer_id
		= c.c_id
		and
		jy.certificate_number =
		zc.certificate_number
		and
		jy.reporting_period =
		zc.reporting_period
		and
		zc.supplier_id = s.s_id
		<choose>
			<when test="isSendEmail == 0">
				and
				jy.status = 0
			</when>
			<when test="isSendEmail == 1">
				and
				jy.status =1
			</when>
		</choose>
		<if test="roleType == 2">
			and zc.supplier_id in(select s_id from supplier where
			user_id = #{userId})
		</if>
	</select>

	<!-- 未找到服务方案减员 -->
	<!-- 未处理已处理减员 -->
	<select id="noSupplierJianyuan" resultMap="BasePoResultMap">
		select jy.jy_id,
		c.customer_name customer_tag,
		jy.client_name,
		jy.employee_name,
		jy.certificate_type,
		jy.certificate_number,
		jy.city,
		jy.dimission_reason,
		jy.dimission_date,
		jy.social_security_stop_date,
		jy.accumulation_fund_stop_date,
		jy.supplier,
		jy.remark,
		jy.import_date,
		jy.reporting_period,
		jy.status
		from jianyuan jy,customer c,zaice
		zc,supplier s
		where
		jy.reporting_period = #{yearMonth}
		and
		jy.customer_id
		= c.c_id
		and
		jy.certificate_number =
		zc.certificate_number
		and
		jy.reporting_period =
		zc.reporting_period
		and
		zc.supplier_id = s.s_id
		and
		zc.supplier_id = 1
	</select>

	<!-- 根据供应商id获取供應商某月份所有身份證號碼 -->
	<select id="getAllCertificateNumber" resultType="string">
		SELECT
		certificate_number
		FROM
		zaice
		WHERE
		reporting_period = #{yearMonth}
		AND
		supplier_id = #{supplierId}
		AND
		status = 2
		AND
		delete_flag = 0
	</select>

	<!-- 修改状态为减员失败 -->
	<update id="jianyuanSuccess">
		update
		jianyuan
		set
		status = 2
		where
		reporting_period =
		#{yearMonth}
		and
		city = #{city}
		and
		certificate_number =
		#{certificateNumber}
	</update>

	<!-- 根据城市获取减员数据 -->
	<select id="getAllByCity" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM
		jianyuan
		WHERE
		reporting_period = #{yearMonth}
		AND
		city = #{city}
		<if test="type == 1">
		AND
        is_export = 0
        </if>
	</select>

	<!-- 修改导出状态 -->
	<update id="updateExportStatus">
		UPDATE
		jianyuan
		SET
		is_export = 1
		WHERE
		jy_id = #{jyId}
	</update>
</mapper>