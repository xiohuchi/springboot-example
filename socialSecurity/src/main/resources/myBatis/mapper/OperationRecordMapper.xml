<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dianmi.mapper.OperationRecordMapper">
	<resultMap id="BaseResultMap" type="operationRecord">
		<constructor>
			<idArg column="or_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
			<arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
			<arg column="dept_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
			<arg column="reporting_period" jdbcType="VARCHAR" javaType="java.lang.String" />
			<arg column="operation_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
			<arg column="status" jdbcType="TINYINT" javaType="java.lang.Byte" />
			<arg column="operation_description" jdbcType="VARCHAR" javaType="java.lang.String" />
		</constructor>
	</resultMap>
	<sql id="Base_Column_List">
		or_id, user_id, dept_id, reporting_period,
		operation_time,
		status,
		operation_description
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from operation_record
		where or_id = #{orId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		operation_record
		where or_id = #{orId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="operationRecord">
		insert into operation_record
		(or_id, user_id, dept_id,
		reporting_period, operation_time, status,
		operation_description)
		values (#{orId,jdbcType=INTEGER},
		#{userId,jdbcType=INTEGER},
		#{deptId,jdbcType=INTEGER},
		#{reportingPeriod,jdbcType=VARCHAR},
		#{operationTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT},
		#{operationDescription,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="operationRecord">
		insert into operation_record
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="orId != null">
				or_id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="deptId != null">
				dept_id,
			</if>
			<if test="reportingPeriod != null">
				reporting_period,
			</if>
			<if test="operationTime != null">
				operation_time,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="operationDescription != null">
				operation_description,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="orId != null">
				#{orId,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="deptId != null">
				#{deptId,jdbcType=INTEGER},
			</if>
			<if test="reportingPeriod != null">
				#{reportingPeriod,jdbcType=VARCHAR},
			</if>
			<if test="operationTime != null">
				#{operationTime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				#{status,jdbcType=TINYINT},
			</if>
			<if test="operationDescription != null">
				#{operationDescription,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="operationRecord">
		update operation_record
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="deptId != null">
				dept_id = #{deptId,jdbcType=INTEGER},
			</if>
			<if test="reportingPeriod != null">
				reporting_period = #{reportingPeriod,jdbcType=VARCHAR},
			</if>
			<if test="operationTime != null">
				operation_time = #{operationTime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=TINYINT},
			</if>
			<if test="operationDescription != null">
				operation_description =
				#{operationDescription,jdbcType=VARCHAR},
			</if>
		</set>
		where or_id = #{orId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="operationRecord">
		update
		operation_record
		set user_id = #{userId,jdbcType=INTEGER},
		dept_id =
		#{deptId,jdbcType=INTEGER},
		reporting_period =
		#{reportingPeriod,jdbcType=VARCHAR},
		operation_time =
		#{operationTime,jdbcType=TIMESTAMP},
		status =
		#{status,jdbcType=TINYINT},
		operation_description =
		#{operationDescription,jdbcType=VARCHAR}
		where or_id =
		#{orId,jdbcType=INTEGER}
	</update>

	<resultMap id="BasePoResultMap" type="com.dianmi.model.po.OperationRecordPo">
		<id column="or_id" property="orId" jdbcType="INTEGER" javaType="java.lang.Integer" />
		<result column="dept_name" property="deptName" jdbcType="VARCHAR"
			javaType="java.lang.String" />
		<result column="operation_time" property="operationTime"
			jdbcType="TIMESTAMP" javaType="java.util.Date" />
		<result column="reporting_period" property="reportingPeriod"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result column="operation_time" property="operationTime"
			jdbcType="TIMESTAMP" javaType="java.util.Date" />
		<result column="status" property="status" jdbcType="TINYINT"
			javaType="java.lang.Byte" />
		<result column="operation_description" property="operationDescription"
			jdbcType="VARCHAR" javaType="java.lang.String" />
	</resultMap>

	<!--查看当前登录用户的操作记录 -->
	<select id="userOperationRecord" resultMap="BasePoResultMap">
		select
		o.or_id,
		kd.dept_name, o.reporting_period,
		o.operation_time, o.status,
		o.operation_description
		from operation_record o,kefu_dept kd where
		o.dept_id = kd.kd_id
		and
		o.reporting_period = #{reportingPeriod}
		and
		o.user_id = #{userId}
	</select>



	<update id="updateStatus" parameterType="java.lang.Integer">
		update operation_record
		set status = 1 where or_id = #{operationRecordId}
	</update>
</mapper>