<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dianmi.mapper.CostSzMapper">
  <resultMap id="BaseResultMap" type="com.dianmi.model.CostSz">
    <constructor>
      <idArg column="cs_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="customer_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="supplier_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="customer_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="reporting_period" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="payment_month" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="person_number" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="certificate_number" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="pension_radix" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="pension_company_pay" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="pension_person_pay" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="unemployment_radix" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="unemployment_company_pay" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="unemployment_person_pay" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="injury_company_radix" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="injury_company_pay" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="procreate_company_radix" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="procreate_company_pay" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="medical_treatment_radix" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="medical_treatment_company_pay" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="medical_treatment_person_pay" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="company_total" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="person_total" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="service_charge" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="social_security_total" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="company_num" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="accumulation_fund_account" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="accumulation_fund_radix" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="accumulation_fund_company_ratio" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="accumulation_fund_person_ratio" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="accumulation_fund_total" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="accumulation_fund_payment_month" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="customer" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    cs_id, user_id, customer_id, supplier_id, customer_name, reporting_period, payment_month, 
    person_number, name, certificate_number, pension_radix, pension_company_pay, pension_person_pay, 
    unemployment_radix, unemployment_company_pay, unemployment_person_pay, injury_company_radix, 
    injury_company_pay, procreate_company_radix, procreate_company_pay, medical_treatment_radix, 
    medical_treatment_company_pay, medical_treatment_person_pay, company_total, person_total, 
    service_charge, social_security_total, company_num, accumulation_fund_account, accumulation_fund_radix, 
    accumulation_fund_company_ratio, accumulation_fund_person_ratio, accumulation_fund_total, 
    accumulation_fund_payment_month, customer
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cost_sz
    where cs_id = #{csId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cost_sz
    where cs_id = #{csId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.dianmi.model.CostSz">
    insert into cost_sz (cs_id, user_id, customer_id, 
      supplier_id, customer_name, reporting_period, 
      payment_month, person_number, name, 
      certificate_number, pension_radix, pension_company_pay, 
      pension_person_pay, unemployment_radix, unemployment_company_pay, 
      unemployment_person_pay, injury_company_radix, 
      injury_company_pay, procreate_company_radix, 
      procreate_company_pay, medical_treatment_radix, 
      medical_treatment_company_pay, medical_treatment_person_pay, 
      company_total, person_total, service_charge, 
      social_security_total, company_num, accumulation_fund_account, 
      accumulation_fund_radix, accumulation_fund_company_ratio, 
      accumulation_fund_person_ratio, accumulation_fund_total, 
      accumulation_fund_payment_month, customer)
    values (#{csId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{customerId,jdbcType=INTEGER}, 
      #{supplierId,jdbcType=INTEGER}, #{customerName,jdbcType=VARCHAR}, #{reportingPeriod,jdbcType=VARCHAR}, 
      #{paymentMonth,jdbcType=VARCHAR}, #{personNumber,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{certificateNumber,jdbcType=VARCHAR}, #{pensionRadix,jdbcType=DOUBLE}, #{pensionCompanyPay,jdbcType=DOUBLE}, 
      #{pensionPersonPay,jdbcType=DOUBLE}, #{unemploymentRadix,jdbcType=DOUBLE}, #{unemploymentCompanyPay,jdbcType=DOUBLE}, 
      #{unemploymentPersonPay,jdbcType=DOUBLE}, #{injuryCompanyRadix,jdbcType=DOUBLE}, 
      #{injuryCompanyPay,jdbcType=DOUBLE}, #{procreateCompanyRadix,jdbcType=DOUBLE}, 
      #{procreateCompanyPay,jdbcType=DOUBLE}, #{medicalTreatmentRadix,jdbcType=DOUBLE}, 
      #{medicalTreatmentCompanyPay,jdbcType=DOUBLE}, #{medicalTreatmentPersonPay,jdbcType=DOUBLE}, 
      #{companyTotal,jdbcType=DOUBLE}, #{personTotal,jdbcType=DOUBLE}, #{serviceCharge,jdbcType=DOUBLE}, 
      #{socialSecurityTotal,jdbcType=DOUBLE}, #{companyNum,jdbcType=VARCHAR}, #{accumulationFundAccount,jdbcType=VARCHAR}, 
      #{accumulationFundRadix,jdbcType=DOUBLE}, #{accumulationFundCompanyRatio,jdbcType=DOUBLE}, 
      #{accumulationFundPersonRatio,jdbcType=DOUBLE}, #{accumulationFundTotal,jdbcType=DOUBLE}, 
      #{accumulationFundPaymentMonth,jdbcType=VARCHAR}, #{customer,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.dianmi.model.CostSz">
    insert into cost_sz
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="csId != null">
        cs_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="supplierId != null">
        supplier_id,
      </if>
      <if test="customerName != null">
        customer_name,
      </if>
      <if test="reportingPeriod != null">
        reporting_period,
      </if>
      <if test="paymentMonth != null">
        payment_month,
      </if>
      <if test="personNumber != null">
        person_number,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="certificateNumber != null">
        certificate_number,
      </if>
      <if test="pensionRadix != null">
        pension_radix,
      </if>
      <if test="pensionCompanyPay != null">
        pension_company_pay,
      </if>
      <if test="pensionPersonPay != null">
        pension_person_pay,
      </if>
      <if test="unemploymentRadix != null">
        unemployment_radix,
      </if>
      <if test="unemploymentCompanyPay != null">
        unemployment_company_pay,
      </if>
      <if test="unemploymentPersonPay != null">
        unemployment_person_pay,
      </if>
      <if test="injuryCompanyRadix != null">
        injury_company_radix,
      </if>
      <if test="injuryCompanyPay != null">
        injury_company_pay,
      </if>
      <if test="procreateCompanyRadix != null">
        procreate_company_radix,
      </if>
      <if test="procreateCompanyPay != null">
        procreate_company_pay,
      </if>
      <if test="medicalTreatmentRadix != null">
        medical_treatment_radix,
      </if>
      <if test="medicalTreatmentCompanyPay != null">
        medical_treatment_company_pay,
      </if>
      <if test="medicalTreatmentPersonPay != null">
        medical_treatment_person_pay,
      </if>
      <if test="companyTotal != null">
        company_total,
      </if>
      <if test="personTotal != null">
        person_total,
      </if>
      <if test="serviceCharge != null">
        service_charge,
      </if>
      <if test="socialSecurityTotal != null">
        social_security_total,
      </if>
      <if test="companyNum != null">
        company_num,
      </if>
      <if test="accumulationFundAccount != null">
        accumulation_fund_account,
      </if>
      <if test="accumulationFundRadix != null">
        accumulation_fund_radix,
      </if>
      <if test="accumulationFundCompanyRatio != null">
        accumulation_fund_company_ratio,
      </if>
      <if test="accumulationFundPersonRatio != null">
        accumulation_fund_person_ratio,
      </if>
      <if test="accumulationFundTotal != null">
        accumulation_fund_total,
      </if>
      <if test="accumulationFundPaymentMonth != null">
        accumulation_fund_payment_month,
      </if>
      <if test="customer != null">
        customer,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="csId != null">
        #{csId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="supplierId != null">
        #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="customerName != null">
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="reportingPeriod != null">
        #{reportingPeriod,jdbcType=VARCHAR},
      </if>
      <if test="paymentMonth != null">
        #{paymentMonth,jdbcType=VARCHAR},
      </if>
      <if test="personNumber != null">
        #{personNumber,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="certificateNumber != null">
        #{certificateNumber,jdbcType=VARCHAR},
      </if>
      <if test="pensionRadix != null">
        #{pensionRadix,jdbcType=DOUBLE},
      </if>
      <if test="pensionCompanyPay != null">
        #{pensionCompanyPay,jdbcType=DOUBLE},
      </if>
      <if test="pensionPersonPay != null">
        #{pensionPersonPay,jdbcType=DOUBLE},
      </if>
      <if test="unemploymentRadix != null">
        #{unemploymentRadix,jdbcType=DOUBLE},
      </if>
      <if test="unemploymentCompanyPay != null">
        #{unemploymentCompanyPay,jdbcType=DOUBLE},
      </if>
      <if test="unemploymentPersonPay != null">
        #{unemploymentPersonPay,jdbcType=DOUBLE},
      </if>
      <if test="injuryCompanyRadix != null">
        #{injuryCompanyRadix,jdbcType=DOUBLE},
      </if>
      <if test="injuryCompanyPay != null">
        #{injuryCompanyPay,jdbcType=DOUBLE},
      </if>
      <if test="procreateCompanyRadix != null">
        #{procreateCompanyRadix,jdbcType=DOUBLE},
      </if>
      <if test="procreateCompanyPay != null">
        #{procreateCompanyPay,jdbcType=DOUBLE},
      </if>
      <if test="medicalTreatmentRadix != null">
        #{medicalTreatmentRadix,jdbcType=DOUBLE},
      </if>
      <if test="medicalTreatmentCompanyPay != null">
        #{medicalTreatmentCompanyPay,jdbcType=DOUBLE},
      </if>
      <if test="medicalTreatmentPersonPay != null">
        #{medicalTreatmentPersonPay,jdbcType=DOUBLE},
      </if>
      <if test="companyTotal != null">
        #{companyTotal,jdbcType=DOUBLE},
      </if>
      <if test="personTotal != null">
        #{personTotal,jdbcType=DOUBLE},
      </if>
      <if test="serviceCharge != null">
        #{serviceCharge,jdbcType=DOUBLE},
      </if>
      <if test="socialSecurityTotal != null">
        #{socialSecurityTotal,jdbcType=DOUBLE},
      </if>
      <if test="companyNum != null">
        #{companyNum,jdbcType=VARCHAR},
      </if>
      <if test="accumulationFundAccount != null">
        #{accumulationFundAccount,jdbcType=VARCHAR},
      </if>
      <if test="accumulationFundRadix != null">
        #{accumulationFundRadix,jdbcType=DOUBLE},
      </if>
      <if test="accumulationFundCompanyRatio != null">
        #{accumulationFundCompanyRatio,jdbcType=DOUBLE},
      </if>
      <if test="accumulationFundPersonRatio != null">
        #{accumulationFundPersonRatio,jdbcType=DOUBLE},
      </if>
      <if test="accumulationFundTotal != null">
        #{accumulationFundTotal,jdbcType=DOUBLE},
      </if>
      <if test="accumulationFundPaymentMonth != null">
        #{accumulationFundPaymentMonth,jdbcType=VARCHAR},
      </if>
      <if test="customer != null">
        #{customer,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dianmi.model.CostSz">
    update cost_sz
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="supplierId != null">
        supplier_id = #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="customerName != null">
        customer_name = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="reportingPeriod != null">
        reporting_period = #{reportingPeriod,jdbcType=VARCHAR},
      </if>
      <if test="paymentMonth != null">
        payment_month = #{paymentMonth,jdbcType=VARCHAR},
      </if>
      <if test="personNumber != null">
        person_number = #{personNumber,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="certificateNumber != null">
        certificate_number = #{certificateNumber,jdbcType=VARCHAR},
      </if>
      <if test="pensionRadix != null">
        pension_radix = #{pensionRadix,jdbcType=DOUBLE},
      </if>
      <if test="pensionCompanyPay != null">
        pension_company_pay = #{pensionCompanyPay,jdbcType=DOUBLE},
      </if>
      <if test="pensionPersonPay != null">
        pension_person_pay = #{pensionPersonPay,jdbcType=DOUBLE},
      </if>
      <if test="unemploymentRadix != null">
        unemployment_radix = #{unemploymentRadix,jdbcType=DOUBLE},
      </if>
      <if test="unemploymentCompanyPay != null">
        unemployment_company_pay = #{unemploymentCompanyPay,jdbcType=DOUBLE},
      </if>
      <if test="unemploymentPersonPay != null">
        unemployment_person_pay = #{unemploymentPersonPay,jdbcType=DOUBLE},
      </if>
      <if test="injuryCompanyRadix != null">
        injury_company_radix = #{injuryCompanyRadix,jdbcType=DOUBLE},
      </if>
      <if test="injuryCompanyPay != null">
        injury_company_pay = #{injuryCompanyPay,jdbcType=DOUBLE},
      </if>
      <if test="procreateCompanyRadix != null">
        procreate_company_radix = #{procreateCompanyRadix,jdbcType=DOUBLE},
      </if>
      <if test="procreateCompanyPay != null">
        procreate_company_pay = #{procreateCompanyPay,jdbcType=DOUBLE},
      </if>
      <if test="medicalTreatmentRadix != null">
        medical_treatment_radix = #{medicalTreatmentRadix,jdbcType=DOUBLE},
      </if>
      <if test="medicalTreatmentCompanyPay != null">
        medical_treatment_company_pay = #{medicalTreatmentCompanyPay,jdbcType=DOUBLE},
      </if>
      <if test="medicalTreatmentPersonPay != null">
        medical_treatment_person_pay = #{medicalTreatmentPersonPay,jdbcType=DOUBLE},
      </if>
      <if test="companyTotal != null">
        company_total = #{companyTotal,jdbcType=DOUBLE},
      </if>
      <if test="personTotal != null">
        person_total = #{personTotal,jdbcType=DOUBLE},
      </if>
      <if test="serviceCharge != null">
        service_charge = #{serviceCharge,jdbcType=DOUBLE},
      </if>
      <if test="socialSecurityTotal != null">
        social_security_total = #{socialSecurityTotal,jdbcType=DOUBLE},
      </if>
      <if test="companyNum != null">
        company_num = #{companyNum,jdbcType=VARCHAR},
      </if>
      <if test="accumulationFundAccount != null">
        accumulation_fund_account = #{accumulationFundAccount,jdbcType=VARCHAR},
      </if>
      <if test="accumulationFundRadix != null">
        accumulation_fund_radix = #{accumulationFundRadix,jdbcType=DOUBLE},
      </if>
      <if test="accumulationFundCompanyRatio != null">
        accumulation_fund_company_ratio = #{accumulationFundCompanyRatio,jdbcType=DOUBLE},
      </if>
      <if test="accumulationFundPersonRatio != null">
        accumulation_fund_person_ratio = #{accumulationFundPersonRatio,jdbcType=DOUBLE},
      </if>
      <if test="accumulationFundTotal != null">
        accumulation_fund_total = #{accumulationFundTotal,jdbcType=DOUBLE},
      </if>
      <if test="accumulationFundPaymentMonth != null">
        accumulation_fund_payment_month = #{accumulationFundPaymentMonth,jdbcType=VARCHAR},
      </if>
      <if test="customer != null">
        customer = #{customer,jdbcType=VARCHAR},
      </if>
    </set>
    where cs_id = #{csId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dianmi.model.CostSz">
    update cost_sz
    set user_id = #{userId,jdbcType=INTEGER},
      customer_id = #{customerId,jdbcType=INTEGER},
      supplier_id = #{supplierId,jdbcType=INTEGER},
      customer_name = #{customerName,jdbcType=VARCHAR},
      reporting_period = #{reportingPeriod,jdbcType=VARCHAR},
      payment_month = #{paymentMonth,jdbcType=VARCHAR},
      person_number = #{personNumber,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      certificate_number = #{certificateNumber,jdbcType=VARCHAR},
      pension_radix = #{pensionRadix,jdbcType=DOUBLE},
      pension_company_pay = #{pensionCompanyPay,jdbcType=DOUBLE},
      pension_person_pay = #{pensionPersonPay,jdbcType=DOUBLE},
      unemployment_radix = #{unemploymentRadix,jdbcType=DOUBLE},
      unemployment_company_pay = #{unemploymentCompanyPay,jdbcType=DOUBLE},
      unemployment_person_pay = #{unemploymentPersonPay,jdbcType=DOUBLE},
      injury_company_radix = #{injuryCompanyRadix,jdbcType=DOUBLE},
      injury_company_pay = #{injuryCompanyPay,jdbcType=DOUBLE},
      procreate_company_radix = #{procreateCompanyRadix,jdbcType=DOUBLE},
      procreate_company_pay = #{procreateCompanyPay,jdbcType=DOUBLE},
      medical_treatment_radix = #{medicalTreatmentRadix,jdbcType=DOUBLE},
      medical_treatment_company_pay = #{medicalTreatmentCompanyPay,jdbcType=DOUBLE},
      medical_treatment_person_pay = #{medicalTreatmentPersonPay,jdbcType=DOUBLE},
      company_total = #{companyTotal,jdbcType=DOUBLE},
      person_total = #{personTotal,jdbcType=DOUBLE},
      service_charge = #{serviceCharge,jdbcType=DOUBLE},
      social_security_total = #{socialSecurityTotal,jdbcType=DOUBLE},
      company_num = #{companyNum,jdbcType=VARCHAR},
      accumulation_fund_account = #{accumulationFundAccount,jdbcType=VARCHAR},
      accumulation_fund_radix = #{accumulationFundRadix,jdbcType=DOUBLE},
      accumulation_fund_company_ratio = #{accumulationFundCompanyRatio,jdbcType=DOUBLE},
      accumulation_fund_person_ratio = #{accumulationFundPersonRatio,jdbcType=DOUBLE},
      accumulation_fund_total = #{accumulationFundTotal,jdbcType=DOUBLE},
      accumulation_fund_payment_month = #{accumulationFundPaymentMonth,jdbcType=VARCHAR},
      customer = #{customer,jdbcType=VARCHAR}
    where cs_id = #{csId,jdbcType=INTEGER}
  </update>

	<!-- -->
	<select id="selectEmployeeName" resultType="java.lang.String">
		select name from
		cost_sz where supplier_id=#{supplierId}
		and reporting_period
		=#{reportingPeriod} and
		certificate_number=#{certificateNumber}
	</select>
	<!-- -->
	<select id="selectSZhomeAlls" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from cost_sz order by cs_id
	</select>
	<!-- -->
	<select id="selectSZhomeAll" resultMap="BaseResultMap">   <!-- limit ${currPage},${pageSize} -->
		select
		<include refid="Base_Column_List" />
		from cost_sz where supplier_id=#{supplierId} and
		reporting_period
		=#{reportingPeriod} order by cs_id limit ${pages},${pageSize}
	</select>
	<!-- -->
	<select id="selectSZhomeAllBySupplierId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from cost_sz where supplier_id=#{supplierId} and
		reporting_period
		=#{reportingPeriod} order by cs_id
	</select>

	<!-- -->
	<update id="updateAccumulation">
		update cost_sz set
		accumulation_fund_company_pay=#{unitAccumulation},
		accumulation_fund_person_pay=#{personAccumulation}
		where
		supplier_id=#{supplierId} and reporting_period=#{reportingPeriod} and
		certificate_number=#{certificateNumber}
	</update>
	<!-- -->
	<delete id="deleteSZhomeDetails">
		delete from cost_sz where supplier_id=#{supplierId}
		and
		reporting_period=#{reportingPeriod}
	</delete>

	<!-- 根据月份、身份证号码查询费用信息是否已经导入系统 -->
	<select id="isCostImport" resultType="int">
		select
		cs_id
		from
		cost_sz
		where
		supplier_id = #{supplierId}
		and
		reporting_period = #{yearMonth}
		and
		certificate_number = #{certificateNumber}
	</select>

	<!-- 根据supplierId、yearMonth、certificateNumber修改深圳费用信息 -->
	<update id="updateCostSz" parameterType="com.dianmi.model.CostSz">
		update
		cost_sz
		set
		pension_radix = #{pensionRadix},
		pension_company_pay =
		#{pensionCompanyPay},
		pension_person_pay = #{pensionPersonPay},
		unemployment_radix = #{unemploymentRadix},
		unemployment_company_pay =
		#{unemploymentCompanyPay},
		unemployment_person_pay =
		#{unemploymentPersonPay},
		injury_company_radix = #{injuryCompanyRadix},
		injury_company_pay = #{injuryCompanyPay},
		procreate_company_radix =
		#{procreateCompanyRadix},
		procreate_company_pay =
		#{procreateCompanyPay},
		medical_treatment_radix =
		#{medicalTreatmentRadix},
		medical_treatment_company_pay =
		#{medicalTreatmentCompanyPay},
		medical_treatment_person_pay =
		#{medicalTreatmentPersonPay},
		company_total = #{companyTotal},
		person_total = #{personTotal},
		social_security_total =
		#{socialSecurityTotal}
		where
		supplier_id =
		#{supplierId}
		and
		reporting_period = #{reportingPeriod}
		and
		certificate_number =
		#{certificateNumber}
	</update>

	<!-- 修改深圳公积金费用信息 -->
	<update id="updateGongjijin" parameterType="costSz">
		update
		cost_sz
		set
		accumulation_fund_account =
		#{accumulationFundAccount,jdbcType=VARCHAR},
		accumulation_fund_radix =
		#{accumulationFundRadix,jdbcType=DOUBLE},
		accumulation_fund_company_ratio =
		#{accumulationFundCompanyRatio,jdbcType=DOUBLE},
		accumulation_fund_person_ratio =
		#{accumulationFundPersonRatio,jdbcType=DOUBLE},
		accumulation_fund_total = #{accumulationFundTotal,jdbcType=DOUBLE},
		accumulation_fund_payment_month =
		#{accumulationFundPaymentMonth,jdbcType=VARCHAR},
		customer =
		#{customer,jdbcType=VARCHAR}
		where
		reporting_period =
		#{reportingPeriod}
		and
		supplier_id = #{supplierId}
		and
		certificate_number =
		#{certificateNumber}
	</update>

    <!-- 自有户费用信息  -->
	<select id="costGroupBySupplier" resultType="map">
		SELECT
		s.s_id,
		s.supplier_name,
		cs.reporting_period,
		sum(cs.social_security_total+cs.accumulation_fund_total) gongsiHeji,
		sum(cs.social_security_total) shebaoHeji,
		sum(cs.accumulation_fund_company_ratio*cs.accumulation_fund_radix) gongjijinGongsi,
		sum(cs.accumulation_fund_person_ratio*cs.accumulation_fund_radix) gongjijinGeren,
		sum(cs.accumulation_fund_total) gongjijinHeji
		FROM
		cost_sz cs,supplier s
		WHERE
		s.s_id = cs.supplier_id
		AND
		cs.reporting_period = #{yearMonth}
		GROUP BY
		supplier_id
	</select>
	
	<!-- 按供应商查询某月份费用信息 -->
	<select id="selectCostBySupplier" resultMap="BaseResultMap">
	    SELECT
	    <include refid="Base_Column_List" />
	    FROM
	    cost_sz
	    WHERE
	    reporting_period = #{yearMonth}
	    AND
	    supplier_id = #{supplierId}
	</select>

</mapper>