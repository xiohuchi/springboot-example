<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dianmi.mapper.SupplierTemplateMapper">
	<resultMap id="BaseResultMap" type="com.dianmi.model.SupplierTemplate">
		<constructor>
			<idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
			<arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
			<arg column="supplier_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
			<arg column="template_name" jdbcType="VARCHAR" javaType="java.lang.String" />
			<arg column="file_path" jdbcType="VARCHAR" javaType="java.lang.String" />
		</constructor>
	</resultMap>
	<sql id="Base_Column_List">
		id, user_id, supplier_id, template_name, file_path
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from supplier_template
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		supplier_template
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.dianmi.model.SupplierTemplate">
		insert into supplier_template
		(id, user_id, supplier_id,
		template_name, file_path)
		values
		(#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER},
		#{supplierId,jdbcType=INTEGER},
		#{templateName,jdbcType=VARCHAR},
		#{filePath,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.dianmi.model.SupplierTemplate">
		insert into supplier_template
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="supplierId != null">
				supplier_id,
			</if>
			<if test="templateName != null">
				template_name,
			</if>
			<if test="filePath != null">
				file_path,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="supplierId != null">
				#{supplierId,jdbcType=INTEGER},
			</if>
			<if test="templateName != null">
				#{templateName,jdbcType=VARCHAR},
			</if>
			<if test="filePath != null">
				#{filePath,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.dianmi.model.SupplierTemplate">
		update supplier_template
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="supplierId != null">
				supplier_id = #{supplierId,jdbcType=INTEGER},
			</if>
			<if test="templateName != null">
				template_name = #{templateName,jdbcType=VARCHAR},
			</if>
			<if test="filePath != null">
				file_path = #{filePath,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.dianmi.model.SupplierTemplate">
		update
		supplier_template
		set user_id = #{userId,jdbcType=INTEGER},
		supplier_id
		= #{supplierId,jdbcType=INTEGER},
		template_name =
		#{templateName,jdbcType=VARCHAR},
		file_path =
		#{filePath,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!-- 获取所有供应商模板信息 -->
	<select id="selectAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from
		supplier_template
	</select>
	<!-- 根据供应商id获取模板信息 -->
	<select id="selectBySupplierId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from
		supplier_template
		where
		supplier_id = #{supplierId]}
	</select>
</mapper>